// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "BrainCloudService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::Ruyi::SDK::BrainCloudApi;

class BrainCloudServiceHandler : virtual public BrainCloudServiceIf {
 public:
  BrainCloudServiceHandler() {
    // Your initialization goes here
  }

  void AsyncMatch_CreateMatch(std::string& _return, const std::string& jsonOpponentIds, const std::string& pushNotificationMessage, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_CreateMatch\n");
  }

  void AsyncMatch_CreateMatchWithInitialTurn(std::string& _return, const std::string& jsonOpponentIds, const std::string& jsonMatchState, const std::string& pushNotificationMessage, const std::string& nextPlayer, const std::string& jsonSummary, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_CreateMatchWithInitialTurn\n");
  }

  void AsyncMatch_SubmitTurn(std::string& _return, const std::string& ownerId, const std::string& matchId, const int64_t version, const std::string& jsonMatchState, const std::string& pushNotificationMessage, const std::string& nextPlayer, const std::string& jsonSummary, const std::string& jsonStatistics, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_SubmitTurn\n");
  }

  void AsyncMatch_UpdateMatchSummaryData(std::string& _return, const std::string& ownerId, const std::string& matchId, const int64_t version, const std::string& jsonSummary, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_UpdateMatchSummaryData\n");
  }

  void AsyncMatch_CompleteMatch(std::string& _return, const std::string& ownerId, const std::string& matchId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_CompleteMatch\n");
  }

  void AsyncMatch_ReadMatch(std::string& _return, const std::string& ownerId, const std::string& matchId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_ReadMatch\n");
  }

  void AsyncMatch_ReadMatchHistory(std::string& _return, const std::string& ownerId, const std::string& matchId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_ReadMatchHistory\n");
  }

  void AsyncMatch_FindMatches(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_FindMatches\n");
  }

  void AsyncMatch_FindCompleteMatches(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_FindCompleteMatches\n");
  }

  void AsyncMatch_AbandonMatch(std::string& _return, const std::string& ownerId, const std::string& matchId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_AbandonMatch\n");
  }

  void AsyncMatch_DeleteMatch(std::string& _return, const std::string& ownerId, const std::string& matchId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("AsyncMatch_DeleteMatch\n");
  }

  void Authentication_GenerateAnonymousId(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_GenerateAnonymousId\n");
  }

  void Authentication_Initialize(const std::string& profileId, const std::string& anonymousId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_Initialize\n");
  }

  void Authentication_ClearSavedProfileID(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_ClearSavedProfileID\n");
  }

  void Authentication_AuthenticateAnonymous(std::string& _return, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_AuthenticateAnonymous\n");
  }

  void Authentication_AuthenticateEmailPassword(std::string& _return, const std::string& email, const std::string& password, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_AuthenticateEmailPassword\n");
  }

  void Authentication_AuthenticateUniversal(std::string& _return, const std::string& userId, const std::string& password, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_AuthenticateUniversal\n");
  }

  void Authentication_AuthenticateExternal(std::string& _return, const std::string& userId, const std::string& token, const std::string& externalAuthName, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_AuthenticateExternal\n");
  }

  void Authentication_ResetEmailPassword(std::string& _return, const std::string& externalId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Authentication_ResetEmailPassword\n");
  }

  void Client_GetSessionId(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_GetSessionId\n");
  }

  bool Client_IsAuthenticated(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_IsAuthenticated\n");
  }

  bool Client_IsInitialized(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_IsInitialized\n");
  }

  void Client_Initialize_SSS(const std::string& secretKey, const std::string& appId, const std::string& appVersion, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_Initialize_SSS\n");
  }

  void Client_Initialize_SSSS(const std::string& serverURL, const std::string& secretKey, const std::string& appId, const std::string& appVersion, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_Initialize_SSSS\n");
  }

  void Client_InitializeIdentity(const std::string& profileId, const std::string& anonymousId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_InitializeIdentity\n");
  }

  void Client_Update(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_Update\n");
  }

  void Client_EnableLogging(const bool enable, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_EnableLogging\n");
  }

  void Client_ResetCommunication(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_ResetCommunication\n");
  }

  void Client_SetPacketTimeouts(const std::vector<int32_t> & timeouts, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_SetPacketTimeouts\n");
  }

  void Client_SetPacketTimeoutsToDefault(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_SetPacketTimeoutsToDefault\n");
  }

  void Client_GetPacketTimeouts(std::vector<int32_t> & _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_GetPacketTimeouts\n");
  }

  void Client_SetAuthenticationPacketTimeout(const int32_t timeoutSecs, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_SetAuthenticationPacketTimeout\n");
  }

  int32_t Client_GetAuthenticationPacketTimeout(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_GetAuthenticationPacketTimeout\n");
  }

  int32_t Client_GetUploadLowTransferRateTimeout(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_GetUploadLowTransferRateTimeout\n");
  }

  void Client_SetUploadLowTransferRateTimeout(const int32_t timeoutSecs, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_SetUploadLowTransferRateTimeout\n");
  }

  int32_t Client_GetUploadLowTransferRateThreshold(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_GetUploadLowTransferRateThreshold\n");
  }

  void Client_SetUploadLowTransferRateThreshold(const int32_t bytesPerSec, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_SetUploadLowTransferRateThreshold\n");
  }

  void Client_EnableNetworkErrorMessageCaching(const bool enabled, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_EnableNetworkErrorMessageCaching\n");
  }

  void Client_RetryCachedMessages(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_RetryCachedMessages\n");
  }

  void Client_FlushCachedMessages(const bool sendApiErrorCallbacks, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_FlushCachedMessages\n");
  }

  void Client_InsertEndOfMessageBundleMarker(const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_InsertEndOfMessageBundleMarker\n");
  }

  void Client_OverrideCountryCode(const std::string& countryCode, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_OverrideCountryCode\n");
  }

  void Client_OverrideLanguageCode(const std::string& languageCode, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Client_OverrideLanguageCode\n");
  }

  void DataStream_CustomPageEvent(std::string& _return, const std::string& eventName, const std::string& jsonEventProperties, const int32_t clientIndex) {
    // Your implementation goes here
    printf("DataStream_CustomPageEvent\n");
  }

  void DataStream_CustomScreenEvent(std::string& _return, const std::string& eventName, const std::string& jsonEventProperties, const int32_t clientIndex) {
    // Your implementation goes here
    printf("DataStream_CustomScreenEvent\n");
  }

  void DataStream_CustomTrackEvent(std::string& _return, const std::string& eventName, const std::string& jsonEventProperties, const int32_t clientIndex) {
    // Your implementation goes here
    printf("DataStream_CustomTrackEvent\n");
  }

  void Entity_CreateEntity(std::string& _return, const std::string& entityType, const std::string& jsonEntityData, const std::string& jsonEntityAcl, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_CreateEntity\n");
  }

  void Entity_GetEntitiesByType(std::string& _return, const std::string& entityType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetEntitiesByType\n");
  }

  void Entity_UpdateEntity(std::string& _return, const std::string& entityId, const std::string& entityType, const std::string& jsonEntityData, const std::string& jsonEntityAcl, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_UpdateEntity\n");
  }

  void Entity_UpdateSharedEntity(std::string& _return, const std::string& entityId, const std::string& targetProfileId, const std::string& entityType, const std::string& jsonEntityData, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_UpdateSharedEntity\n");
  }

  void Entity_DeleteEntity(std::string& _return, const std::string& entityId, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_DeleteEntity\n");
  }

  void Entity_UpdateSingleton(std::string& _return, const std::string& entityType, const std::string& jsonEntityData, const std::string& jsonEntityAcl, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_UpdateSingleton\n");
  }

  void Entity_DeleteSingleton(std::string& _return, const std::string& entityType, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_DeleteSingleton\n");
  }

  void Entity_GetEntity(std::string& _return, const std::string& entityId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetEntity\n");
  }

  void Entity_GetSingleton(std::string& _return, const std::string& entityType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetSingleton\n");
  }

  void Entity_GetSharedEntityForProfileId(std::string& _return, const std::string& profileId, const std::string& entityId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetSharedEntityForProfileId\n");
  }

  void Entity_GetSharedEntitiesForProfileId(std::string& _return, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetSharedEntitiesForProfileId\n");
  }

  void Entity_GetList(std::string& _return, const std::string& whereJson, const std::string& orderByJson, const int32_t maxReturn, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetList\n");
  }

  void Entity_GetSharedEntitiesListForProfileId(std::string& _return, const std::string& profileId, const std::string& whereJson, const std::string& orderByJson, const int32_t maxReturn, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetSharedEntitiesListForProfileId\n");
  }

  void Entity_GetListCount(std::string& _return, const std::string& whereJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetListCount\n");
  }

  void Entity_GetPage(std::string& _return, const std::string& jsonContext, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetPage\n");
  }

  void Entity_GetPageOffset(std::string& _return, const std::string& context, const int32_t pageOffset, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_GetPageOffset\n");
  }

  void Entity_IncrementUserEntityData(std::string& _return, const std::string& entityId, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_IncrementUserEntityData\n");
  }

  void Entity_IncrementSharedUserEntityData(std::string& _return, const std::string& entityId, const std::string& targetProfileId, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Entity_IncrementSharedUserEntityData\n");
  }

  void Event_SendEvent(std::string& _return, const std::string& toProfileId, const std::string& eventType, const std::string& jsonEventData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Event_SendEvent\n");
  }

  void Event_UpdateIncomingEventData(std::string& _return, const std::string& evId, const std::string& jsonEventData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Event_UpdateIncomingEventData\n");
  }

  void Event_DeleteIncomingEvent(std::string& _return, const std::string& evId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Event_DeleteIncomingEvent\n");
  }

  void Event_GetEvents(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Event_GetEvents\n");
  }

  void File_UploadFile(std::string& _return, const std::string& cloudPath, const std::string& cloudFilename, const bool shareable, const bool replaceIfExists, const std::string& localPath, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_UploadFile\n");
  }

  void File_CancelUpload(const std::string& uploadId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_CancelUpload\n");
  }

  double File_GetUploadProgress(const std::string& uploadId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_GetUploadProgress\n");
  }

  int64_t File_GetUploadBytesTransferred(const std::string& uploadId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_GetUploadBytesTransferred\n");
  }

  int64_t File_GetUploadTotalBytesToTransfer(const std::string& uploadId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_GetUploadTotalBytesToTransfer\n");
  }

  void File_ListUserFiles_SFO(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_ListUserFiles_SFO\n");
  }

  void File_ListUserFiles_SNSFO(std::string& _return, const std::string& cloudPath, const bool recurse, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_ListUserFiles_SNSFO\n");
  }

  void File_DeleteUserFile(std::string& _return, const std::string& cloudPath, const std::string& cloudFileName, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_DeleteUserFile\n");
  }

  void File_DeleteUserFiles(std::string& _return, const std::string& cloudPath, const bool recurse, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_DeleteUserFiles\n");
  }

  void File_GetCDNUrl(std::string& _return, const std::string& cloudPath, const std::string& cloudFilename, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_GetCDNUrl\n");
  }

  void Friend_FindUserByUniversalId(std::string& _return, const std::string& searchText, const int32_t maxResults, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_FindUserByUniversalId\n");
  }

  void Friend_GetProfileInfoForCredential(std::string& _return, const std::string& externalId, const std::string& authenticationType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_GetProfileInfoForCredential\n");
  }

  void Friend_GetProfileInfoForExternalAuthId(std::string& _return, const std::string& externalId, const std::string& externalAuthType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_GetProfileInfoForExternalAuthId\n");
  }

  void Friend_GetExternalIdForProfileId(std::string& _return, const std::string& profileId, const std::string& authenticationType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_GetExternalIdForProfileId\n");
  }

  void Friend_ReadFriendEntity(std::string& _return, const std::string& entityId, const std::string& friendId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_ReadFriendEntity\n");
  }

  void Friend_ReadFriendsEntities(std::string& _return, const std::string& entityType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_ReadFriendsEntities\n");
  }

  void Friend_ReadFriendUserState(std::string& _return, const std::string& friendId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_ReadFriendUserState\n");
  }

  void Friend_GetSummaryDataForProfileId(std::string& _return, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_GetSummaryDataForProfileId\n");
  }

  void Friend_FindUsersByExactName(std::string& _return, const std::string& searchText, const int32_t maxResults, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_FindUsersByExactName\n");
  }

  void Friend_FindUsersBySubstrName(std::string& _return, const std::string& searchText, const int32_t maxResults, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_FindUsersBySubstrName\n");
  }

  void Friend_ListFriends(std::string& _return, const  ::Ruyi::SDK::BrainCloudApi::FriendPlatform::type friendPlatform, const bool includeSummaryData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_ListFriends\n");
  }

  void Friend_AddFriends(std::string& _return, const std::vector<std::string> & profileIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_AddFriends\n");
  }

  void Friend_RemoveFriends(std::string& _return, const std::vector<std::string> & profileIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_RemoveFriends\n");
  }

  void Friend_GetUsersOnlineStatus(std::string& _return, const std::vector<std::string> & profileIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Friend_GetUsersOnlineStatus\n");
  }

  void Gamification_ReadAllGamification(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadAllGamification\n");
  }

  void Gamification_ReadMilestones(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadMilestones\n");
  }

  void Gamification_ReadAchievements(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadAchievements\n");
  }

  void Gamification_ReadXpLevelsMetaData(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadXpLevelsMetaData\n");
  }

  void Gamification_ReadAchievedAchievements(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadAchievedAchievements\n");
  }

  void Gamification_ReadCompletedMilestones(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadCompletedMilestones\n");
  }

  void Gamification_ReadInProgressMilestones(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadInProgressMilestones\n");
  }

  void Gamification_ReadMilestonesByCategory(std::string& _return, const std::string& category, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadMilestonesByCategory\n");
  }

  void Gamification_AwardAchievements(std::string& _return, const std::vector<std::string> & achievementIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_AwardAchievements\n");
  }

  void Gamification_ReadQuests(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadQuests\n");
  }

  void Gamification_ReadCompletedQuests(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadCompletedQuests\n");
  }

  void Gamification_ReadInProgressQuests(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadInProgressQuests\n");
  }

  void Gamification_ReadNotStartedQuests(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadNotStartedQuests\n");
  }

  void Gamification_ReadQuestsWithStatus(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadQuestsWithStatus\n");
  }

  void Gamification_ReadQuestsWithBasicPercentage(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadQuestsWithBasicPercentage\n");
  }

  void Gamification_ReadQuestsWithComplexPercentage(std::string& _return, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadQuestsWithComplexPercentage\n");
  }

  void Gamification_ReadQuestsByCategory(std::string& _return, const std::string& category, const bool includeMetaData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ReadQuestsByCategory\n");
  }

  void Gamification_ResetMilestones(std::string& _return, const std::vector<std::string> & milestoneIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Gamification_ResetMilestones\n");
  }

  void GlobalApp_ReadProperties(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalApp_ReadProperties\n");
  }

  void GlobalEntity_CreateEntity(std::string& _return, const std::string& entityType, const int64_t timeToLive, const std::string& jsonEntityAcl, const std::string& jsonEntityData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_CreateEntity\n");
  }

  void GlobalEntity_CreateEntityWithIndexedId(std::string& _return, const std::string& entityType, const std::string& indexedId, const int64_t timeToLive, const std::string& jsonEntityAcl, const std::string& jsonEntityData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_CreateEntityWithIndexedId\n");
  }

  void GlobalEntity_UpdateEntity(std::string& _return, const std::string& entityId, const int32_t version, const std::string& jsonEntityData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_UpdateEntity\n");
  }

  void GlobalEntity_UpdateEntityAcl(std::string& _return, const std::string& entityId, const int32_t version, const std::string& jsonEntityAcl, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_UpdateEntityAcl\n");
  }

  void GlobalEntity_UpdateEntityTimeToLive(std::string& _return, const std::string& entityId, const int32_t version, const int64_t timeToLive, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_UpdateEntityTimeToLive\n");
  }

  void GlobalEntity_DeleteEntity(std::string& _return, const std::string& entityId, const int32_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_DeleteEntity\n");
  }

  void GlobalEntity_ReadEntity(std::string& _return, const std::string& entityId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_ReadEntity\n");
  }

  void GlobalEntity_GetList(std::string& _return, const std::string& whereJson, const std::string& orderByJson, const int32_t maxReturn, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetList\n");
  }

  void GlobalEntity_GetListByIndexedId(std::string& _return, const std::string& entityIndexedId, const int32_t maxReturn, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetListByIndexedId\n");
  }

  void GlobalEntity_GetListCount(std::string& _return, const std::string& whereJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetListCount\n");
  }

  void GlobalEntity_GetPage(std::string& _return, const std::string& jsonContext, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetPage\n");
  }

  void GlobalEntity_GetPageOffset(std::string& _return, const std::string& context, const int32_t pageOffset, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetPageOffset\n");
  }

  void GlobalEntity_IncrementGlobalEntityData(std::string& _return, const std::string& entityId, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_IncrementGlobalEntityData\n");
  }

  void GlobalEntity_GetRandomEntitiesMatching(std::string& _return, const std::string& whereJson, const int32_t maxReturn, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_GetRandomEntitiesMatching\n");
  }

  void GlobalEntity_UpdateEntityOwnerAndAcl(std::string& _return, const std::string& entityId, const int64_t version, const std::string& ownerId, const  ::Ruyi::SDK::BrainCloudApi::JSON& acl, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_UpdateEntityOwnerAndAcl\n");
  }

  void GlobalEntity_MakeSystemEntity(std::string& _return, const std::string& entityId, const int64_t version, const  ::Ruyi::SDK::BrainCloudApi::JSON& acl, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalEntity_MakeSystemEntity\n");
  }

  void GlobalStatistics_ReadAllGlobalStats(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalStatistics_ReadAllGlobalStats\n");
  }

  void GlobalStatistics_ReadGlobalStatsSubset(std::string& _return, const std::vector<std::string> & globalStats, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalStatistics_ReadGlobalStatsSubset\n");
  }

  void GlobalStatistics_ReadGlobalStatsForCategory(std::string& _return, const std::string& category, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalStatistics_ReadGlobalStatsForCategory\n");
  }

  void GlobalStatistics_IncrementGlobalStats(std::string& _return, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalStatistics_IncrementGlobalStats\n");
  }

  void GlobalStatistics_ProcessStatistics(std::string& _return, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & statisticsData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("GlobalStatistics_ProcessStatistics\n");
  }

  void Group_AcceptGroupInvitation(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_AcceptGroupInvitation\n");
  }

  void Group_AddGroupMember(std::string& _return, const std::string& groupId, const std::string& profileId, const  ::Ruyi::SDK::BrainCloudApi::Role::type role, const std::string& jsonAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_AddGroupMember\n");
  }

  void Group_ApproveGroupJoinRequest(std::string& _return, const std::string& groupId, const std::string& profileId, const  ::Ruyi::SDK::BrainCloudApi::Role::type role, const std::string& jsonAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ApproveGroupJoinRequest\n");
  }

  void Group_AutoJoinGroup(std::string& _return, const std::string& groupType, const  ::Ruyi::SDK::BrainCloudApi::AutoJoinStrategy::type autoJoinStrategy, const std::string& dataQueryJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_AutoJoinGroup\n");
  }

  void Group_CancelGroupInvitation(std::string& _return, const std::string& groupId, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_CancelGroupInvitation\n");
  }

  void Group_CreateGroup(std::string& _return, const std::string& name, const std::string& groupType, const bool isOpenGroup, const  ::Ruyi::SDK::BrainCloudApi::JSON& acl, const std::string& jsonData, const std::string& jsonOwnerAttributes, const std::string& jsonDefaultMemberAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_CreateGroup\n");
  }

  void Group_CreateGroupEntity(std::string& _return, const std::string& groupId, const std::string& entityType, const bool isOwnedByGroupMember, const  ::Ruyi::SDK::BrainCloudApi::JSON& acl, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_CreateGroupEntity\n");
  }

  void Group_DeleteGroup(std::string& _return, const std::string& groupId, const int64_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_DeleteGroup\n");
  }

  void Group_DeleteGroupEntity(std::string& _return, const std::string& groupId, const std::string& entityId, const int64_t version, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_DeleteGroupEntity\n");
  }

  void Group_GetMyGroups(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_GetMyGroups\n");
  }

  void Group_IncrementGroupData(std::string& _return, const std::string& groupId, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_IncrementGroupData\n");
  }

  void Group_IncrementGroupEntityData(std::string& _return, const std::string& groupId, const std::string& entityId, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_IncrementGroupEntityData\n");
  }

  void Group_InviteGroupMember(std::string& _return, const std::string& groupId, const std::string& profileId, const  ::Ruyi::SDK::BrainCloudApi::Role::type role, const std::string& jsonAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_InviteGroupMember\n");
  }

  void Group_JoinGroup(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_JoinGroup\n");
  }

  void Group_LeaveGroup(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_LeaveGroup\n");
  }

  void Group_ListGroupsPage(std::string& _return, const std::string& jsonContext, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ListGroupsPage\n");
  }

  void Group_ListGroupsPageByOffset(std::string& _return, const std::string& context, const int32_t pageOffset, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ListGroupsPageByOffset\n");
  }

  void Group_ListGroupsWithMember(std::string& _return, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ListGroupsWithMember\n");
  }

  void Group_ReadGroup(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroup\n");
  }

  void Group_ReadGroupData(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroupData\n");
  }

  void Group_ReadGroupEntitiesPage(std::string& _return, const std::string& jsonContext, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroupEntitiesPage\n");
  }

  void Group_ReadGroupEntitiesPageByOffset(std::string& _return, const std::string& encodedContext, const int32_t pageOffset, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroupEntitiesPageByOffset\n");
  }

  void Group_ReadGroupEntity(std::string& _return, const std::string& groupId, const std::string& entityId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroupEntity\n");
  }

  void Group_ReadGroupMembers(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_ReadGroupMembers\n");
  }

  void Group_RejectGroupInvitation(std::string& _return, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_RejectGroupInvitation\n");
  }

  void Group_RejectGroupJoinRequest(std::string& _return, const std::string& groupId, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_RejectGroupJoinRequest\n");
  }

  void Group_RemoveGroupMember(std::string& _return, const std::string& groupId, const std::string& profileId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_RemoveGroupMember\n");
  }

  void Group_UpdateGroupData(std::string& _return, const std::string& groupId, const int64_t version, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_UpdateGroupData\n");
  }

  void Group_UpdateGroupEntityData(std::string& _return, const std::string& groupId, const std::string& entityId, const int64_t version, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_UpdateGroupEntityData\n");
  }

  void Group_UpdateGroupMember(std::string& _return, const std::string& groupId, const std::string& profileId, const  ::Ruyi::SDK::BrainCloudApi::Role::type role, const std::string& jsonAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_UpdateGroupMember\n");
  }

  void Group_UpdateGroupName(std::string& _return, const std::string& groupId, const std::string& name, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Group_UpdateGroupName\n");
  }

  void Identity_AttachEmailIdentity(std::string& _return, const std::string& email, const std::string& password, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_AttachEmailIdentity\n");
  }

  void Identity_MergeEmailIdentity(std::string& _return, const std::string& email, const std::string& password, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_MergeEmailIdentity\n");
  }

  void Identity_DetachEmailIdentity(std::string& _return, const std::string& email, const bool continueAnon, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_DetachEmailIdentity\n");
  }

  void Identity_AttachUniversalIdentity(std::string& _return, const std::string& userId, const std::string& password, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_AttachUniversalIdentity\n");
  }

  void Identity_MergeUniversalIdentity(std::string& _return, const std::string& userId, const std::string& password, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_MergeUniversalIdentity\n");
  }

  void Identity_DetachUniversalIdentity(std::string& _return, const std::string& userId, const bool continueAnon, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_DetachUniversalIdentity\n");
  }

  void Identity_SwitchToChildProfile(std::string& _return, const std::string& childProfileId, const std::string& childAppId, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_SwitchToChildProfile\n");
  }

  void Identity_SwitchToSingletonChildProfile(std::string& _return, const std::string& childAppId, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_SwitchToSingletonChildProfile\n");
  }

  void Identity_AttachParentWithIdentity(std::string& _return, const std::string& externalId, const std::string& authenticationToken, const std::string& authenticationType, const std::string& externalAuthName, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_AttachParentWithIdentity\n");
  }

  void Identity_SwitchToParentProfile(std::string& _return, const std::string& parentLevelName, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_SwitchToParentProfile\n");
  }

  void Identity_DetachParent(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_DetachParent\n");
  }

  void Identity_GetChildProfiles(std::string& _return, const bool includeSummaryData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_GetChildProfiles\n");
  }

  void Identity_GetIdentities(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_GetIdentities\n");
  }

  void Identity_GetExpiredIdentities(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_GetExpiredIdentities\n");
  }

  void Identity_RefreshIdentity(std::string& _return, const std::string& externalId, const std::string& authenticationToken, const std::string& authenticationType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_RefreshIdentity\n");
  }

  void Identity_AttachPeerProfile(std::string& _return, const std::string& peer, const std::string& externalId, const std::string& authenticationToken, const std::string& authenticationType, const std::string& externalAuthName, const bool forceCreate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_AttachPeerProfile\n");
  }

  void Identity_DetachPeer(std::string& _return, const std::string& peer, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_DetachPeer\n");
  }

  void Identity_GetPeerProfiles(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Identity_GetPeerProfiles\n");
  }

  void Mail_SendBasicEmail(std::string& _return, const std::string& profileId, const std::string& subject, const std::string& body, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Mail_SendBasicEmail\n");
  }

  void Mail_SendAdvancedEmail(std::string& _return, const std::string& profileId, const std::string& jsonServiceParams, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Mail_SendAdvancedEmail\n");
  }

  void Mail_SendAdvancedEmailByAddress(std::string& _return, const std::string& emailAddress, const std::string& jsonServiceParams, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Mail_SendAdvancedEmailByAddress\n");
  }

  void MatchMaking_Read(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_Read\n");
  }

  void MatchMaking_SetPlayerRating(std::string& _return, const int64_t playerRating, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_SetPlayerRating\n");
  }

  void MatchMaking_ResetPlayerRating(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_ResetPlayerRating\n");
  }

  void MatchMaking_IncrementPlayerRating(std::string& _return, const int64_t increment, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_IncrementPlayerRating\n");
  }

  void MatchMaking_DecrementPlayerRating(std::string& _return, const int64_t decrement, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_DecrementPlayerRating\n");
  }

  void MatchMaking_TurnShieldOn(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_TurnShieldOn\n");
  }

  void MatchMaking_TurnShieldOnFor(std::string& _return, const int32_t minutes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_TurnShieldOnFor\n");
  }

  void MatchMaking_TurnShieldOff(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_TurnShieldOff\n");
  }

  void MatchMaking_IncrementShieldOnFor(std::string& _return, const int32_t minutes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_IncrementShieldOnFor\n");
  }

  void MatchMaking_GetShieldExpiry(std::string& _return, const std::string& playerId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_GetShieldExpiry\n");
  }

  void MatchMaking_FindPlayers(std::string& _return, const int64_t rangeDelta, const int64_t numMatches, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_FindPlayers\n");
  }

  void MatchMaking_FindPlayersWithAttributes(std::string& _return, const int64_t rangeDelta, const int64_t numMatches, const std::string& jsonAttributes, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_FindPlayersWithAttributes\n");
  }

  void MatchMaking_FindPlayersUsingFilter(std::string& _return, const int64_t rangeDelta, const int64_t numMatches, const std::string& jsonExtraParms, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_FindPlayersUsingFilter\n");
  }

  void MatchMaking_FindPlayersWithAttributesUsingFilter(std::string& _return, const int64_t rangeDelta, const int64_t numMatches, const std::string& jsonAttributes, const std::string& jsonExtraParms, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_FindPlayersWithAttributesUsingFilter\n");
  }

  void MatchMaking_EnableMatchMaking(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_EnableMatchMaking\n");
  }

  void MatchMaking_DisableMatchMaking(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("MatchMaking_DisableMatchMaking\n");
  }

  void OneWayMatch_StartMatch(std::string& _return, const std::string& otherPlayerId, const int64_t rangeDelta, const int32_t clientIndex) {
    // Your implementation goes here
    printf("OneWayMatch_StartMatch\n");
  }

  void OneWayMatch_CancelMatch(std::string& _return, const std::string& playbackStreamId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("OneWayMatch_CancelMatch\n");
  }

  void OneWayMatch_CompleteMatch(std::string& _return, const std::string& playbackStreamId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("OneWayMatch_CompleteMatch\n");
  }

  void PlaybackStream_StartStream(std::string& _return, const std::string& targetPlayerId, const bool includeSharedData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_StartStream\n");
  }

  void PlaybackStream_ReadStream(std::string& _return, const std::string& playbackStreamId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_ReadStream\n");
  }

  void PlaybackStream_EndStream(std::string& _return, const std::string& playbackStreamId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_EndStream\n");
  }

  void PlaybackStream_DeleteStream(std::string& _return, const std::string& playbackStreamId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_DeleteStream\n");
  }

  void PlaybackStream_AddEvent(std::string& _return, const std::string& playbackStreamId, const std::string& eventData, const std::string& summary, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_AddEvent\n");
  }

  void PlaybackStream_GetRecentStreamsForInitiatingPlayer(std::string& _return, const std::string& initiatingPlayerId, const int32_t maxNumStreams, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_GetRecentStreamsForInitiatingPlayer\n");
  }

  void PlaybackStream_GetRecentStreamsForTargetPlayer(std::string& _return, const std::string& targetPlayerId, const int32_t maxNumStreams, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlaybackStream_GetRecentStreamsForTargetPlayer\n");
  }

  void PlayerState_ReadUserState(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_ReadUserState\n");
  }

  void PlayerState_DeleteUser(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_DeleteUser\n");
  }

  void PlayerState_ResetUser(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_ResetUser\n");
  }

  void PlayerState_Logout(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_Logout\n");
  }

  void PlayerState_UpdateUserName(std::string& _return, const std::string& userName, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_UpdateUserName\n");
  }

  void PlayerState_UpdateSummaryFriendData(std::string& _return, const std::string& jsonSummaryData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_UpdateSummaryFriendData\n");
  }

  void PlayerState_GetAttributes(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_GetAttributes\n");
  }

  void PlayerState_UpdateAttributes(std::string& _return, const std::string& jsonAttributes, const bool wipeExisting, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_UpdateAttributes\n");
  }

  void PlayerState_RemoveAttributes(std::string& _return, const std::vector<std::string> & attributeNames, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_RemoveAttributes\n");
  }

  void PlayerState_UpdateUserPictureUrl(std::string& _return, const std::string& pictureUrl, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_UpdateUserPictureUrl\n");
  }

  void PlayerState_UpdateContactEmail(std::string& _return, const std::string& contactEmail, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerState_UpdateContactEmail\n");
  }

  void PlayerStatistics_ReadAllUserStats(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_ReadAllUserStats\n");
  }

  void PlayerStatistics_ReadUserStatsSubset(std::string& _return, const std::vector<std::string> & playerStats, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_ReadUserStatsSubset\n");
  }

  void PlayerStatistics_ReadUserStatsForCategory(std::string& _return, const std::string& category, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_ReadUserStatsForCategory\n");
  }

  void PlayerStatistics_ResetAllUserStats(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_ResetAllUserStats\n");
  }

  void PlayerStatistics_IncrementUserStats_SSFO(std::string& _return, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_IncrementUserStats_SSFO\n");
  }

  void PlayerStatistics_IncrementUserStats_DSFO(std::string& _return, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & dictData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_IncrementUserStats_DSFO\n");
  }

  void PlayerStatistics_ProcessStatistics(std::string& _return, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & statisticsData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_ProcessStatistics\n");
  }

  void PlayerStatistics_GetNextExperienceLevel(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_GetNextExperienceLevel\n");
  }

  void PlayerStatistics_IncrementExperiencePoints(std::string& _return, const int32_t xpValue, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_IncrementExperiencePoints\n");
  }

  void PlayerStatistics_SetExperiencePoints(std::string& _return, const int32_t xpValue, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatistics_SetExperiencePoints\n");
  }

  void PlayerStatisticsEvent_TriggerStatsEvent(std::string& _return, const std::string& eventName, const int32_t eventMultiplier, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatisticsEvent_TriggerStatsEvent\n");
  }

  void PlayerStatisticsEvent_TriggerStatsEvents(std::string& _return, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PlayerStatisticsEvent_TriggerStatsEvents\n");
  }

  void Product_GetCurrency(std::string& _return, const std::string& currencyType, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_GetCurrency\n");
  }

  void Product_GetSalesInventory(std::string& _return, const std::string& platform, const std::string& userCurrency, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_GetSalesInventory\n");
  }

  void Product_GetSalesInventoryByCategory(std::string& _return, const std::string& platform, const std::string& userCurrency, const std::string& category, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_GetSalesInventoryByCategory\n");
  }

  void Product_VerifyMicrosoftReceipt(std::string& _return, const std::string& receipt, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_VerifyMicrosoftReceipt\n");
  }

  void Product_GetEligiblePromotions(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_GetEligiblePromotions\n");
  }

  void Product_VerifyItunesReceipt(std::string& _return, const std::string& base64EncReceiptData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Product_VerifyItunesReceipt\n");
  }

  void Profanity_ProfanityCheck(std::string& _return, const std::string& text, const std::string& languages, const bool flagEmail, const bool flagPhone, const bool flagUrls, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Profanity_ProfanityCheck\n");
  }

  void Profanity_ProfanityReplaceText(std::string& _return, const std::string& text, const std::string& replaceSymbol, const std::string& languages, const bool flagEmail, const bool flagPhone, const bool flagUrls, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Profanity_ProfanityReplaceText\n");
  }

  void Profanity_ProfanityIdentifyBadWords(std::string& _return, const std::string& text, const std::string& languages, const bool flagEmail, const bool flagPhone, const bool flagUrls, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Profanity_ProfanityIdentifyBadWords\n");
  }

  void PushNotification_DeregisterAllPushNotificationDeviceTokens(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_DeregisterAllPushNotificationDeviceTokens\n");
  }

  void PushNotification_DeregisterPushNotificationDeviceToken(std::string& _return, const std::string& platform, const std::string& token, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_DeregisterPushNotificationDeviceToken\n");
  }

  void PushNotification_RegisterPushNotificationDeviceToken(std::string& _return, const std::string& platform, const std::string& token, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_RegisterPushNotificationDeviceToken\n");
  }

  void PushNotification_SendSimplePushNotification(std::string& _return, const std::string& toProfileId, const std::string& message, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendSimplePushNotification\n");
  }

  void PushNotification_SendRichPushNotification(std::string& _return, const std::string& toProfileId, const int32_t notificationTemplateId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendRichPushNotification\n");
  }

  void PushNotification_SendRichPushNotificationWithParams(std::string& _return, const std::string& toProfileId, const int32_t notificationTemplateId, const std::string& substitutionJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendRichPushNotificationWithParams\n");
  }

  void PushNotification_SendTemplatedPushNotificationToGroup(std::string& _return, const std::string& groupId, const int32_t notificationTemplateId, const std::string& substitutionsJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendTemplatedPushNotificationToGroup\n");
  }

  void PushNotification_SendNormalizedPushNotificationToGroup(std::string& _return, const std::string& groupId, const std::string& alertContentJson, const std::string& customDataJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendNormalizedPushNotificationToGroup\n");
  }

  void PushNotification_ScheduleRawPushNotificationUTC(std::string& _return, const std::string& profileId, const std::string& fcmContent, const std::string& iosContent, const std::string& facebookContent, const int32_t startTime, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleRawPushNotificationUTC\n");
  }

  void PushNotification_ScheduleRawPushNotificationMinutes(std::string& _return, const std::string& profileId, const std::string& fcmContent, const std::string& iosContent, const std::string& facebookContent, const int32_t minutesFromNow, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleRawPushNotificationMinutes\n");
  }

  void PushNotification_SendRawPushNotification(std::string& _return, const std::string& toProfileId, const std::string& fcmContent, const std::string& iosContent, const std::string& facebookContent, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendRawPushNotification\n");
  }

  void PushNotification_SendRawPushNotificationBatch(std::string& _return, const std::vector<std::string> & profileIds, const std::string& fcmContent, const std::string& iosContent, const std::string& facebookContent, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendRawPushNotificationBatch\n");
  }

  void PushNotification_SendRawPushNotificationToGroup(std::string& _return, const std::string& groupId, const std::string& fcmContent, const std::string& iosContent, const std::string& facebookContent, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendRawPushNotificationToGroup\n");
  }

  void PushNotification_ScheduleNormalizedPushNotificationUTC(std::string& _return, const std::string& profileId, const std::string& alertContentJson, const std::string& customDataJson, const int32_t startTime, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleNormalizedPushNotificationUTC\n");
  }

  void PushNotification_ScheduleNormalizedPushNotificationMinutes(std::string& _return, const std::string& profileId, const std::string& alertContentJson, const std::string& customDataJson, const int32_t minutesFromNow, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleNormalizedPushNotificationMinutes\n");
  }

  void PushNotification_ScheduleRichPushNotificationUTC(std::string& _return, const std::string& profileId, const int32_t notificationTemplateId, const std::string& substitutionsJson, const int32_t startTime, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleRichPushNotificationUTC\n");
  }

  void PushNotification_ScheduleRichPushNotificationMinutes(std::string& _return, const std::string& profileId, const int32_t notificationTemplateId, const std::string& substitutionsJson, const int32_t minutesFromNow, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_ScheduleRichPushNotificationMinutes\n");
  }

  void PushNotification_SendNormalizedPushNotification(std::string& _return, const std::string& toProfileId, const std::string& alertContentJson, const std::string& customDataJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendNormalizedPushNotification\n");
  }

  void PushNotification_SendNormalizedPushNotificationBatch(std::string& _return, const std::vector<std::string> & profileIds, const std::string& alertContentJson, const std::string& customDataJson, const int32_t clientIndex) {
    // Your implementation goes here
    printf("PushNotification_SendNormalizedPushNotificationBatch\n");
  }

  void Script_RunScript(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_RunScript\n");
  }

  void Script_ScheduleRunScriptUTC(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const  ::Ruyi::SDK::BrainCloudApi::date startDateInUTC, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_ScheduleRunScriptUTC\n");
  }

  void Script_ScheduleRunScriptMinutes(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const int64_t minutesFromNow, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_ScheduleRunScriptMinutes\n");
  }

  void Script_RunParentScript(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const std::string& parentLevel, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_RunParentScript\n");
  }

  void Script_CancelScheduledScript(std::string& _return, const std::string& jobId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_CancelScheduledScript\n");
  }

  void Script_RunPeerScript(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const std::string& peer, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_RunPeerScript\n");
  }

  void Script_RunPeerScriptAsynch(std::string& _return, const std::string& scriptName, const std::string& jsonScriptData, const std::string& peer, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Script_RunPeerScriptAsynch\n");
  }

  void SocialLeaderboard_GetSocialLeaderboard(std::string& _return, const std::string& leaderboardId, const bool replaceName, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetSocialLeaderboard\n");
  }

  void SocialLeaderboard_GetMultiSocialLeaderboard(std::string& _return, const std::vector<std::string> & leaderboardIds, const int32_t leaderboardResultCount, const bool replaceName, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetMultiSocialLeaderboard\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardPage(std::string& _return, const std::string& leaderboardId, const  ::Ruyi::SDK::BrainCloudApi::SortOrder::type sort, const int32_t startIndex, const int32_t endIndex, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardPage\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardPageByVersion(std::string& _return, const std::string& leaderboardId, const  ::Ruyi::SDK::BrainCloudApi::SortOrder::type sort, const int32_t startIndex, const int32_t endIndex, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardPageByVersion\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardView(std::string& _return, const std::string& leaderboardId, const  ::Ruyi::SDK::BrainCloudApi::SortOrder::type sort, const int32_t beforeCount, const int32_t afterCount, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardView\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardViewByVersion(std::string& _return, const std::string& leaderboardId, const  ::Ruyi::SDK::BrainCloudApi::SortOrder::type sort, const int32_t beforeCount, const int32_t afterCount, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardViewByVersion\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardVersions(std::string& _return, const std::string& leaderboardId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardVersions\n");
  }

  void SocialLeaderboard_GetGroupSocialLeaderboard(std::string& _return, const std::string& leaderboardId, const std::string& groupId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGroupSocialLeaderboard\n");
  }

  void SocialLeaderboard_PostScoreToLeaderboard(std::string& _return, const std::string& leaderboardId, const int64_t score, const std::string& jsonData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_PostScoreToLeaderboard\n");
  }

  void SocialLeaderboard_RemovePlayerScore(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_RemovePlayerScore\n");
  }

  void SocialLeaderboard_PostScoreToDynamicLeaderboard(std::string& _return, const std::string& leaderboardId, const int64_t score, const std::string& jsonData, const  ::Ruyi::SDK::BrainCloudApi::SocialLeaderboardType::type leaderboardType, const  ::Ruyi::SDK::BrainCloudApi::RotationType::type rotationType, const  ::Ruyi::SDK::BrainCloudApi::date rotationReset, const int32_t retainedCount, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_PostScoreToDynamicLeaderboard\n");
  }

  void SocialLeaderboard_PostScoreToDynamicLeaderboardDays(std::string& _return, const std::string& leaderboardId, const int64_t score, const std::string& jsonData, const  ::Ruyi::SDK::BrainCloudApi::SocialLeaderboardType::type leaderboardType, const  ::Ruyi::SDK::BrainCloudApi::date rotationReset, const int32_t retainedCount, const int32_t numDaysToRotate, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_PostScoreToDynamicLeaderboardDays\n");
  }

  void SocialLeaderboard_GetPlayersSocialLeaderboard(std::string& _return, const std::string& leaderboardId, const std::vector<std::string> & profileIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetPlayersSocialLeaderboard\n");
  }

  void SocialLeaderboard_ListLeaderboards(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_ListLeaderboards\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardEntryCount(std::string& _return, const std::string& leaderboardId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardEntryCount\n");
  }

  void SocialLeaderboard_GetGlobalLeaderboardEntryCountByVersion(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetGlobalLeaderboardEntryCountByVersion\n");
  }

  void SocialLeaderboard_GetPlayerScore(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetPlayerScore\n");
  }

  void SocialLeaderboard_GetPlayerScoresFromLeaderboards(std::string& _return, const std::vector<std::string> & leaderboardIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialLeaderboard_GetPlayerScoresFromLeaderboards\n");
  }

  void Time_ReadServerTime(std::string& _return, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Time_ReadServerTime\n");
  }

  void Tournament_ClaimTournamentReward(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_ClaimTournamentReward\n");
  }

  void Tournament_GetTournamentStatus(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_GetTournamentStatus\n");
  }

  void Tournament_JoinTournament(std::string& _return, const std::string& leaderboardId, const std::string& tournamentCode, const int64_t initialScore, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_JoinTournament\n");
  }

  void Tournament_LeaveTournament(std::string& _return, const std::string& leaderboardId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_LeaveTournament\n");
  }

  void Tournament_PostTournamentScore(std::string& _return, const std::string& leaderboardId, const int64_t score, const std::string& jsonData, const  ::Ruyi::SDK::BrainCloudApi::date roundStartedTime, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_PostTournamentScore\n");
  }

  void Tournament_PostTournamentScoreWithResults(std::string& _return, const std::string& leaderboardId, const int64_t score, const std::string& jsonData, const  ::Ruyi::SDK::BrainCloudApi::date roundStartedTime, const  ::Ruyi::SDK::BrainCloudApi::SortOrder::type sort, const int32_t beforeCount, const int32_t afterCount, const int64_t initialScore, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_PostTournamentScoreWithResults\n");
  }

  void Tournament_ViewCurrentReward(std::string& _return, const std::string& leaderboardId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_ViewCurrentReward\n");
  }

  void Tournament_ViewReward(std::string& _return, const std::string& leaderboardId, const int32_t versionId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Tournament_ViewReward\n");
  }

  void SocialFeed_ShareVideo(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareVideo\n");
  }

  void SocialFeed_ShareScreenshot(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareScreenshot\n");
  }

  void SocialFeed_ShareAchievement(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareAchievement\n");
  }

  void SocialFeed_ShareApp(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareApp\n");
  }

  void SocialFeed_ShareChannel(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareChannel\n");
  }

  void SocialFeed_ShareLink(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareLink\n");
  }

  void SocialFeed_ShareGameGuide(std::string& _return, const int32_t timestamp, const std::string& resource, const std::vector<std::string> & tagged, const std::vector<std::string> & show, const std::vector<std::string> & block, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ShareGameGuide\n");
  }

  void SocialFeed_ReadSocialFeed(std::string& _return, const int32_t skip, const int32_t limit, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ReadSocialFeed\n");
  }

  void SocialFeed_ReadFilteredSocialFeed(std::string& _return, const int32_t skip, const int32_t limit, const std::vector<std::string> & playerIds, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ReadFilteredSocialFeed\n");
  }

  void SocialFeed_ReadFriendsSocialFeed(std::string& _return, const int32_t skip, const int32_t limit, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ReadFriendsSocialFeed\n");
  }

  void SocialFeed_PostComment(std::string& _return, const int32_t timestamp, const std::string& parentId, const std::string& content, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_PostComment\n");
  }

  void SocialFeed_PostCommentReply(std::string& _return, const int32_t timestamp, const std::string& parentId, const std::string& content, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_PostCommentReply\n");
  }

  void SocialFeed_ReadComments(std::string& _return, const int32_t skip, const int32_t limit, const std::string& parentId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ReadComments\n");
  }

  void SocialFeed_ReadCommentReplies(std::string& _return, const int32_t skip, const int32_t limit, const std::string& parentId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_ReadCommentReplies\n");
  }

  void SocialFeed_LikeComment(std::string& _return, const std::string& socialFeedId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_LikeComment\n");
  }

  void SocialFeed_LikeActivity(std::string& _return, const std::string& socialFeedId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_LikeActivity\n");
  }

  void SocialFeed_UnlikeComment(std::string& _return, const std::string& socialFeedId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_UnlikeComment\n");
  }

  void SocialFeed_UnlikeActivity(std::string& _return, const std::string& socialFeedId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_UnlikeActivity\n");
  }

  void SocialFeed_SetFeedVisibility(std::string& _return, const std::string& visibility, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_SetFeedVisibility\n");
  }

  void SocialFeed_BlockPlayer(std::string& _return, const std::string& playerId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_BlockPlayer\n");
  }

  void SocialFeed_HidePlayer(std::string& _return, const std::string& playerId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_HidePlayer\n");
  }

  void SocialFeed_UnblockPlayer(std::string& _return, const std::string& playerId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_UnblockPlayer\n");
  }

  void SocialFeed_UnhidePlayer(std::string& _return, const std::string& playerId, const int32_t clientIndex) {
    // Your implementation goes here
    printf("SocialFeed_UnhidePlayer\n");
  }

  void Telemetry_StartTelemetrySession(std::string& _return, const int32_t timestamp, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Telemetry_StartTelemetrySession\n");
  }

  void Telemetry_EndTelemetrySession(std::string& _return, const std::string& telemetrySessionId, const int32_t timestamp, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Telemetry_EndTelemetrySession\n");
  }

  void Telemetry_LogTelemetryEvent(std::string& _return, const std::string& telemetrySessionId, const int32_t timestamp, const std::string& eventType, const std::string& participantId, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & customData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Telemetry_LogTelemetryEvent\n");
  }

  void Telemetry_StartTelemetryEvent(std::string& _return, const std::string& telemetrySessionId, const int32_t timestamp, const std::string& eventType, const std::string& participantId, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & customData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Telemetry_StartTelemetryEvent\n");
  }

  void Telemetry_EndTelemetryEvent(std::string& _return, const std::string& telemetrySessionId, const int32_t timestamp, const std::string& eventType, const std::string& participantId, const std::map<std::string,  ::Ruyi::SDK::BrainCloudApi::JSON> & customData, const int32_t clientIndex) {
    // Your implementation goes here
    printf("Telemetry_EndTelemetryEvent\n");
  }

  void File_DownloadFile(std::string& _return, const std::string& cloudPath, const std::string& cloudFilename, const bool replaceIfExists, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_DownloadFile\n");
  }

  void File_GetDownloadInfo(std::string& _return, const std::string& cloudPath, const std::string& cloudFilename, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_GetDownloadInfo\n");
  }

  void File_CancelDownload(std::string& _return, const std::string& cloudPath, const std::string& cloudFilename, const int32_t clientIndex) {
    // Your implementation goes here
    printf("File_CancelDownload\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<BrainCloudServiceHandler> handler(new BrainCloudServiceHandler());
  shared_ptr<TProcessor> processor(new BrainCloudServiceProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

