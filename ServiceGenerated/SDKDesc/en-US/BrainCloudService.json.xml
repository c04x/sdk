<?xml version="1.0"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <Author>Mark McDonagh</Author>
  <LastAuthor>Mark McDonagh</LastAuthor>
  <Created>2018-03-15T03:44:17Z</Created>
  <Version>16.00</Version>
 </DocumentProperties>
 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">
  <AllowPNG/>
 </OfficeDocumentSettings>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>5385</WindowHeight>
  <WindowWidth>28770</WindowWidth>
  <WindowTopX>0</WindowTopX>
  <WindowTopY>0</WindowTopY>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>
 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="11" ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s62">
   <Alignment ss:Vertical="Bottom" ss:WrapText="1"/>
  </Style>
 </Styles>
 <Worksheet ss:Name="Sheet1">
  <Table ss:ExpandedColumnCount="2" ss:ExpandedRowCount="653" x:FullColumns="1"
   x:FullRows="1" ss:DefaultRowHeight="15">
   <Column ss:Index="2" ss:AutoFitWidth="0" ss:Width="528.75"/>
   <Row>
    <Cell><Data ss:Type="String">key</Data></Cell>
    <Cell><Data ss:Type="String">text</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1735999931</Data></Cell>
    <Cell><Data ss:Type="String">Creates an instance of an asynchronous match.</Data></Cell>
   </Row>
   <Row ss:Height="255">
    <Cell><Data ss:Type="Number">3139767871</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">JSON string identifying the opponent platform and id for this match.&#13;&#10;            &#13;&#10;             Platforms are identified as:&#13;&#10;             BC - a brainCloud profile id&#13;&#10;             FB - a Facebook id&#13;&#10;            &#13;&#10;             An exmaple of this string would be:&#13;&#10;             [&#13;&#10;                 {&#13;&#10;                     &quot;platform&quot;: &quot;BC&quot;,&#13;&#10;                     &quot;id&quot;: &quot;some-braincloud-profile&quot;&#13;&#10;                 },&#13;&#10;                 {&#13;&#10;                     &quot;platform&quot;: &quot;FB&quot;,&#13;&#10;                     &quot;id&quot;: &quot;some-facebook-id&quot;&#13;&#10;                 }&#13;&#10;             ]</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">479258274</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Optional push notification message to send to the other party.&#13;&#10;             Refer to the Push Notification functions for the syntax required.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloud.clientIndex.desc</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloud_ApiReturnString_desc</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3055101781</Data></Cell>
    <Cell><Data ss:Type="String">Creates an instance of an asynchronous match with an initial turn.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3534313502</Data></Cell>
    <Cell><Data ss:Type="String">JSON string blob provided by the caller</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2072160883</Data></Cell>
    <Cell><Data ss:Type="String">Optionally, force the next player player to be a specific player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1688200352</Data></Cell>
    <Cell><Data ss:Type="String">Optional JSON string defining what the other player will see as a summary of the game when listing their games</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1083685604</Data></Cell>
    <Cell><Data ss:Type="String">Submits a turn for the given match.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3841941098</Data></Cell>
    <Cell><Data ss:Type="String">Match owner identfier</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4200862272</Data></Cell>
    <Cell><Data ss:Type="String">Match identifier</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3095048035</Data></Cell>
    <Cell><Data ss:Type="String">Game state version to ensure turns are submitted once and in order</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1889124215</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Optional push notification message to send to the other party.&#13;&#10;            Refer to the Push Notification functions for the syntax required.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3908003710</Data></Cell>
    <Cell><Data ss:Type="String">Optional JSON string that other players will see as a summary of the game when listing their games</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1193245884</Data></Cell>
    <Cell><Data ss:Type="String">Optional JSON string blob provided by the caller</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">374487901</Data></Cell>
    <Cell><Data ss:Type="String">Allows the current player (only) to update Summary data without having to submit a whole turn.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1375121412</Data></Cell>
    <Cell><Data ss:Type="String">JSON string provided by the caller that other players will see as a summary of the game when listing their games</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1244360275</Data></Cell>
    <Cell><Data ss:Type="String">Marks the given match as complete.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1044394888</Data></Cell>
    <Cell><Data ss:Type="String">Match owner identifier</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2933443394</Data></Cell>
    <Cell><Data ss:Type="String">Returns the current state of the given match.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1828470396</Data></Cell>
    <Cell><Data ss:Type="String">Returns the match history of the given match.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3002294837</Data></Cell>
    <Cell><Data ss:Type="String">Returns all matches that are NOT in a COMPLETE state for which the player is involved.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2373989909</Data></Cell>
    <Cell><Data ss:Type="String">Returns all matches that are in a COMPLETE state for which the player is involved.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2272511581</Data></Cell>
    <Cell><Data ss:Type="String">Marks the given match as abandoned.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3787133221</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Removes the match and match history from the server. DEBUG ONLY, in production it is recommended&#13;&#10;            the user leave it as completed.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2479648167</Data></Cell>
    <Cell><Data ss:Type="String">Used to create the anonymous installation id for the brainCloud profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">193302802</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Initialize - initializes the identity service with a saved&#13;&#10;            anonymous installation id and most recently used profile id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3085079842</Data></Cell>
    <Cell><Data ss:Type="String">The id of the profile id that was most recently used by the app (on this device)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1806193879</Data></Cell>
    <Cell><Data ss:Type="String">The anonymous installation id that was generated for this device</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3762543723</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Used to clear the saved profile id - to use in cases when the user is&#13;&#10;            attempting to switch to a different app profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3955087225</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Authenticate a user anonymously with brainCloud - used for apps that don't want to bother&#13;&#10;            the user to login, or for users who are sensitive to their privacy</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1777346469</Data></Cell>
    <Cell><Data ss:Type="String">Should a new profile be created if it does not exist?</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">1946373781</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Authenticate the user with a custom Email and Password.  Note that the client app&#13;&#10;             is responsible for collecting (and storing) the e-mail and potentially password&#13;&#10;             (for convenience) in the client data.  For the greatest security,&#13;&#10;             force the user to re-enter their password at each login.&#13;&#10;             (Or at least give them that option).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2201587160</Data></Cell>
    <Cell><Data ss:Type="String">The e-mail address of the user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">854728314</Data></Cell>
    <Cell><Data ss:Type="String">The password of the user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1684753045</Data></Cell>
    <Cell><Data ss:Type="String">Should a new profile be created for this user if the account does not exist?</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">1548030657</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Authenticate the user using a userId and password (without any validation on the userId).&#13;&#10;            Similar to AuthenticateEmailPassword - except that that method has additional features to&#13;&#10;            allow for e-mail validation, password resets, etc.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">507135211</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user with brainCloud using their Facebook Credentials</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2493696314</Data></Cell>
    <Cell><Data ss:Type="String">The facebook id of the user</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">4235726679</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from the Facebook SDK (that will be further&#13;&#10;            validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1688123355</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user using their Game Center id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4247436738</Data></Cell>
    <Cell><Data ss:Type="String">The user's game center id  (use the profileID property from the local GKPlayer object)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3305619993</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user using a steam userId and session ticket (without any validation on the userId).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1981543485</Data></Cell>
    <Cell><Data ss:Type="String">String representation of 64 bit steam id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2908279014</Data></Cell>
    <Cell><Data ss:Type="String">The session ticket of the user (hex encoded)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3114692828</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user using a google userId(email address) and google authentication token.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">516280543</Data></Cell>
    <Cell><Data ss:Type="String">String representation of google+ userId (email)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1508526595</Data></Cell>
    <Cell><Data ss:Type="String">The authentication token derived via the google apis.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2642155412</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user using a Twitter userId, authentication token, and secret from twitter.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1581972763</Data></Cell>
    <Cell><Data ss:Type="String">String representation of a Twitter user ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1763806920</Data></Cell>
    <Cell><Data ss:Type="String">The authentication token derived via the Twitter apis</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3864447296</Data></Cell>
    <Cell><Data ss:Type="String">The secret given when attempting to link with Twitter</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3668870802</Data></Cell>
    <Cell><Data ss:Type="String">Authenticate the user using a Pase userId and authentication token</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1685416120</Data></Cell>
    <Cell><Data ss:Type="String">String representation of Parse user ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3894020060</Data></Cell>
    <Cell><Data ss:Type="String">The authentication token</Data></Cell>
   </Row>
   <Row ss:Height="60">
    <Cell><Data ss:Type="Number">59548206</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Authenticate the user via cloud code (which in turn validates the supplied credentials against an external system).&#13;&#10;            This allows the developer to extend brainCloud authentication to support other backend authentication systems.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1985315242</Data></Cell>
    <Cell><Data ss:Type="String">The user id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">146220744</Data></Cell>
    <Cell><Data ss:Type="String">The user token (password etc)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1840213763</Data></Cell>
    <Cell><Data ss:Type="String">The name of the cloud script to call for external authentication</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">133412905</Data></Cell>
    <Cell><Data ss:Type="String">Reset Email password - Sends a password reset email to the specified address</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2655101166</Data></Cell>
    <Cell><Data ss:Type="String">The email address to send the reset email to.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3444819271</Data></Cell>
    <Cell><Data ss:Type="String">Returns the sessionId or empty string if no session present.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">1312534190</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Returns true if the user is currently authenticated.&#13;&#10;            If a session time out or session invalidation is returned from executing a&#13;&#10;            sever API call, this flag will reset back to false.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">664937367</Data></Cell>
    <Cell><Data ss:Type="String">Returns true if brainCloud has been initialized.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">838416781</Data></Cell>
    <Cell><Data ss:Type="String">Method initializes the BrainCloudClient.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4108344346</Data></Cell>
    <Cell><Data ss:Type="String">The secret key for your app</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1998441296</Data></Cell>
    <Cell><Data ss:Type="String">The app version</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3445806146</Data></Cell>
    <Cell><Data ss:Type="String">The URL to the brainCloud server</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">509282308</Data></Cell>
    <Cell><Data ss:Type="String">The app id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3733420207</Data></Cell>
    <Cell><Data ss:Type="String">Initialize the identity aspects of brainCloud.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2361538896</Data></Cell>
    <Cell><Data ss:Type="String">The profile id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">939633187</Data></Cell>
    <Cell><Data ss:Type="String">The anonymous id</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">734487796</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Shuts down all systems needed for BrainCloudClient&#13;&#10;            Only call this from the main thread.&#13;&#10;            Should be used at the end of the app, and opposite of Initialize Client</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2100347379</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Update method needs to be called regularly in order&#13;&#10;            to process incoming and outgoing messages.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">531061632</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets a callback handler for any out of band event messages that come from&#13;&#10;            brainCloud.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1141595152</Data></Cell>
    <Cell><Data ss:Type="String">De-registers the event callback.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">308850362</Data></Cell>
    <Cell><Data ss:Type="String">Sets a reward handler for any API call results that return rewards.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">617402473</Data></Cell>
    <Cell><Data ss:Type="String">De-registers the reward callback.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2829390168</Data></Cell>
    <Cell><Data ss:Type="String">Registers the file upload callbacks.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1811126552</Data></Cell>
    <Cell><Data ss:Type="String">De-registers the file upload callbacks.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">980921871</Data></Cell>
    <Cell><Data ss:Type="String">Failure callback invoked for all errors generated</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2158776578</Data></Cell>
    <Cell><Data ss:Type="String">De-registers the global error callback.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">3377880815</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Registers a callback that is invoked for network errors.&#13;&#10;            Note this is only called if EnableNetworkErrorMessageCaching&#13;&#10;            has been set to true.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4216479526</Data></Cell>
    <Cell><Data ss:Type="String">De-registers the network error callback.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">812329987</Data></Cell>
    <Cell><Data ss:Type="String">Enable logging of brainCloud transactions (comms etc)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">183123008</Data></Cell>
    <Cell><Data ss:Type="String">True if logging is to be enabled</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2634604267</Data></Cell>
    <Cell><Data ss:Type="String">Allow developers to register their own log handling routine</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4072729027</Data></Cell>
    <Cell><Data ss:Type="String">Get the Server URL</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">756021322</Data></Cell>
    <Cell><Data ss:Type="String">Resets all messages and calls to the server</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3200027351</Data></Cell>
    <Cell><Data ss:Type="String">Enable Communications with the server. By default this is true</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3145570044</Data></Cell>
    <Cell><Data ss:Type="String">True to enable comms, false otherwise.</Data></Cell>
   </Row>
   <Row ss:Height="180">
    <Cell><Data ss:Type="Number">2235855424</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the packet timeouts using a list of integers that&#13;&#10;             represent timeout values for each packet retry. The&#13;&#10;             first item in the list represents the timeout for the first packet&#13;&#10;             attempt, the second for the second packet attempt, and so on.&#13;&#10;            &#13;&#10;             The number of entries in this array determines how many packet&#13;&#10;             retries will occur.&#13;&#10;            &#13;&#10;             By default, the packet timeout array is {10, 10, 10}&#13;&#10;            &#13;&#10;             Note that this method does not change the timeout for authentication&#13;&#10;             packets (use SetAuthenticationPacketTimeout method).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">389590184</Data></Cell>
    <Cell><Data ss:Type="String">An array of packet timeouts.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">222577060</Data></Cell>
    <Cell><Data ss:Type="String">Sets the packet timeouts back to default.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2621231961</Data></Cell>
    <Cell><Data ss:Type="String">Returns the list of packet timeouts.</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">2375642786</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the authentication packet timeout which is tracked separately&#13;&#10;            from all other packets. Note that authentication packets are never&#13;&#10;            retried and so this value represents the total time a client would&#13;&#10;            wait to receive a reply to an authentication API call. By default&#13;&#10;            this timeout is set to 15 seconds.</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">2003567164</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Gets the authentication packet timeout which is tracked separately&#13;&#10;            from all other packets. Note that authentication packets are never&#13;&#10;            retried and so this value represents the total time a client would&#13;&#10;            wait to receive a reply to an authentication API call. By default&#13;&#10;            this timeout is set to 15 seconds.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">3700225571</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the error callback to return the status message instead of the&#13;&#10;            error JSON string. This flag is used to conform to pre-2.17 client&#13;&#10;            behavior.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">985747944</Data></Cell>
    <Cell><Data ss:Type="String">If set to true, enable.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3416508813</Data></Cell>
    <Cell><Data ss:Type="String">Returns the low transfer rate timeout in secs</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">1127791948</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the timeout in seconds of a low speed upload&#13;&#10;            (i.e. transfer rate which is underneath the low transfer rate threshold).&#13;&#10;            By default this is set to 120 secs.Setting this value to 0 will&#13;&#10;            turn off the timeout. Note that this timeout method&#13;&#10;            does not work on Unity mobile platforms.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3328749628</Data></Cell>
    <Cell><Data ss:Type="String">Returns the low transfer rate threshold in bytes/sec</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">4200828676</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the low transfer rate threshold of an upload in bytes/sec.&#13;&#10;            If the transfer rate dips below the given threshold longer&#13;&#10;            than the specified timeout, the transfer will fail.&#13;&#10;            By default this is set to 50 bytes/sec. Note that this timeout method&#13;&#10;            does not work on Unity mobile platforms.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">408587651</Data></Cell>
    <Cell><Data ss:Type="String">The low transfer rate threshold in bytes/sec</Data></Cell>
   </Row>
   <Row ss:Height="345">
    <Cell><Data ss:Type="Number">1884419720</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Enables the timeout message caching which is disabled by default.&#13;&#10;             Once enabled, if a client side timeout is encountered&#13;&#10;             (i.e. brainCloud server is unreachable presumably due to the client&#13;&#10;             network being down) the SDK will do the following:&#13;&#10;            &#13;&#10;             1 - cache the currently queued messages to brainCloud&#13;&#10;             2 - call the network error callback&#13;&#10;             3 - then expect the app to call either:&#13;&#10;                 a) RetryCachedMessages() to retry sending to brainCloud&#13;&#10;                 b) FlushCachedMessages() to dump all messages in the queue.&#13;&#10;            &#13;&#10;             Between steps 2 and 3, the app can prompt the user to retry connecting&#13;&#10;             to brainCloud to determine whether to follow path 3a or 3b.&#13;&#10;            &#13;&#10;             Note that if path 3a is followed, and another timeout is encountered,&#13;&#10;             the process will begin all over again from step 1.&#13;&#10;            &#13;&#10;             WARNING - the brainCloud SDK will cache *all* API calls sent&#13;&#10;             when a timeout is encountered if this mechanism is enabled.&#13;&#10;             This effectively freezes all communication with brainCloud.&#13;&#10;             Apps must call either RetryCachedMessages() or FlushCachedMessages()&#13;&#10;             for the brainCloud SDK to resume sending messages.&#13;&#10;             ResetCommunication() will also clear the message cache.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1308158537</Data></Cell>
    <Cell><Data ss:Type="String">True if message should be cached on timeout</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2222162304</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Attempts to resend any cached messages. If no messages are in the cache,&#13;&#10;            this method does nothing.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1087821618</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Flushes the cached messages to resume API call processing. This will dump&#13;&#10;            all of the cached messages in the queue.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">3466491389</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">If set to true API error callbacks will&#13;&#10;            be called for every cached message with statusCode CLIENT_NETWORK_ERROR and reasonCode CLIENT_NETWORK_ERROR_TIMEOUT.</Data></Cell>
   </Row>
   <Row ss:Height="165">
    <Cell><Data ss:Type="Number">2445604999</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Inserts a marker which will tell the brainCloud comms layer&#13;&#10;             to close the message bundle off at this point. Any messages queued&#13;&#10;             before this method was called will likely be bundled together in&#13;&#10;             the next send to the server.&#13;&#10;            &#13;&#10;             To ensure that only a single message is sent to the server you would&#13;&#10;             do something like this:&#13;&#10;            &#13;&#10;             InsertEndOfMessageBundleMarker()&#13;&#10;             SomeApiCall()&#13;&#10;             InsertEndOfMessageBundleMarker()</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2621538292</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the country code sent to brainCloud when a user authenticates.&#13;&#10;            Will override any auto detected country.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3033821128</Data></Cell>
    <Cell><Data ss:Type="String">ISO 3166-1 two-letter country code</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">3170840443</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the language code sent to brainCloud when a user authenticates.&#13;&#10;            If the language is set to a non-ISO 639-1 standard value the game default will be used instead.&#13;&#10;            Will override any auto detected language.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3488432854</Data></Cell>
    <Cell><Data ss:Type="String">ISO 639-1 two-letter language code</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1823165735</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Normally not needed as the brainCloud SDK sends heartbeats automatically.&#13;&#10;            Regardless, this is a manual way to send a heartbeat.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1665027479</Data></Cell>
    <Cell><Data ss:Type="String">Creates custom data stream page event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3528586283</Data></Cell>
    <Cell><Data ss:Type="String">The name of the event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1751374320</Data></Cell>
    <Cell><Data ss:Type="String">The properties of the event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2414598843</Data></Cell>
    <Cell><Data ss:Type="String">Creates custom data stream screen event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3860336508</Data></Cell>
    <Cell><Data ss:Type="String">Creates custom data stream track event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3505440060</Data></Cell>
    <Cell><Data ss:Type="String">Method creates a new entity on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4141126572</Data></Cell>
    <Cell><Data ss:Type="String">The entity type as defined by the user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3037040994</Data></Cell>
    <Cell><Data ss:Type="String">The entity's data as a json string</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1603920605</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The entity's access control list as json. A null acl implies default&#13;&#10;            permissions which make the entity readable/writeable by only the user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2471822248</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all user entities that match the given type.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1692812277</Data></Cell>
    <Cell><Data ss:Type="String">The entity type to search for</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">760731589</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method updates a new entity on the server. This operation results in the entity&#13;&#10;            data being completely replaced by the passed in JSON string.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3265596006</Data></Cell>
    <Cell><Data ss:Type="String">The id of the entity to update</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">819543746</Data></Cell>
    <Cell><Data ss:Type="String">The entity's data as a json string.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">277656762</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Current version of the entity. If the version of the&#13;&#10;            entity on the server does not match the version passed in, the&#13;&#10;            server operation will fail. Use -1 to skip version checking.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3021275662</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method updates a shared entity owned by another user. This operation results in the entity&#13;&#10;            data being completely replaced by the passed in JSON string.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2842766851</Data></Cell>
    <Cell><Data ss:Type="String">The id of the entity's owner</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">1451948757</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Current version of the entity. If the version of the&#13;&#10;             entity on the server does not match the version passed in, the&#13;&#10;             server operation will fail. Use -1 to skip version checking.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4232621699</Data></Cell>
    <Cell><Data ss:Type="String">Method deletes the given entity on the server.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1622391385</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method updates a singleton entity on the server. This operation results in the entity&#13;&#10;            data being completely replaced by the passed in JSON string. If the entity doesn't exist it is created.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2780417651</Data></Cell>
    <Cell><Data ss:Type="String">The entity's access control list as json. A null acl implies default</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2803851001</Data></Cell>
    <Cell><Data ss:Type="String">Method deletes the given singleton on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3107160459</Data></Cell>
    <Cell><Data ss:Type="String">Method to get a specific entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2060713411</Data></Cell>
    <Cell><Data ss:Type="String">The id of the entity</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">467676555</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves a singleton entity on the server. If the entity doesn't exist, null is returned.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">453909529</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns a shared entity for the given profile and entity ID.&#13;&#10;            An entity is shared if its ACL allows for the currently logged&#13;&#10;            in user to read the data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3517395164</Data></Cell>
    <Cell><Data ss:Type="String">The the profile ID of the user who owns the entity</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">726531876</Data></Cell>
    <Cell><Data ss:Type="String">The ID of the entity that will be retrieved</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">2253194945</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns all shared entities for the given profile id.&#13;&#10;            An entity is shared if its ACL allows for the currently logged&#13;&#10;            in user to read the data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">466204036</Data></Cell>
    <Cell><Data ss:Type="String">The profile id to retrieve shared entities for</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">716179818</Data></Cell>
    <Cell><Data ss:Type="String">Method gets list of entities from the server base on type and/or where clause</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3516293419</Data></Cell>
    <Cell><Data ss:Type="String">Mongo style query string</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1536477903</Data></Cell>
    <Cell><Data ss:Type="String">Sort order</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1773452290</Data></Cell>
    <Cell><Data ss:Type="String">The maximum number of entities to return</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">26639608</Data></Cell>
    <Cell><Data ss:Type="String">Method gets list of shared entities for the specified user based on type and/or where clause</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1632390796</Data></Cell>
    <Cell><Data ss:Type="String">The profile ID to retrieve shared entities for</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1535771672</Data></Cell>
    <Cell><Data ss:Type="String">Method gets a count of entities based on the where clause</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">3118112592</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method uses a paging system to iterate through user entities.&#13;&#10;            After retrieving a page of entities with this method,&#13;&#10;            use GetPageOffset() to retrieve previous or next pages.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3940874492</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The json context for the page request.&#13;&#10;            See the portal appendix documentation for format</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1332121304</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method to retrieve previous or next pages after having called&#13;&#10;            the GetPage method.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2160767531</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The context string returned from the server from a previous call&#13;&#10;            to GetPage() or GetPageOffset()</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">725206239</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The positive or negative page offset to fetch. Uses the last page&#13;&#10;            retrieved using the context string to determine a starting point.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3392170453</Data></Cell>
    <Cell><Data ss:Type="String">Partial increment of entity data field items. Partial set of items incremented as specified.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1704718089</Data></Cell>
    <Cell><Data ss:Type="String">The entity to increment</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4007859347</Data></Cell>
    <Cell><Data ss:Type="String">The subset of data to increment</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3361161979</Data></Cell>
    <Cell><Data ss:Type="String">Partial increment of shared entity data field items. Partial set of items incremented as specified.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2150918635</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the entity owner</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">1155832742</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends an event to the designated profile id with the attached json data.&#13;&#10;            Any events that have been sent to a user will show up in their&#13;&#10;            incoming event mailbox. If the recordLocally flag is set to true,&#13;&#10;            a copy of this event (with the exact same event id) will be stored&#13;&#10;            in the sending user's &quot;sent&quot; event mailbox.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2192406650</Data></Cell>
    <Cell><Data ss:Type="String">The id of the user who is being sent the event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">951412716</Data></Cell>
    <Cell><Data ss:Type="String">The user-defined type of the event.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3482964783</Data></Cell>
    <Cell><Data ss:Type="String">The user-defined data for this event encoded in JSON.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">782837948</Data></Cell>
    <Cell><Data ss:Type="String">Updates an event in the user's incoming event mailbox.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2966055789</Data></Cell>
    <Cell><Data ss:Type="String">The event id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">87852597</Data></Cell>
    <Cell><Data ss:Type="String">Delete an event out of the user's incoming mailbox.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2797464092</Data></Cell>
    <Cell><Data ss:Type="String">Get the events currently queued for the user.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">1767661737</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Prepares a user file upload. On success the file will begin uploading&#13;&#10;            to the brainCloud server.To be informed of success/failure of the upload&#13;&#10;            register an IFileUploadCallback with the BrainCloudClient class.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2140307414</Data></Cell>
    <Cell><Data ss:Type="String">The desired cloud path of the file</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">551139570</Data></Cell>
    <Cell><Data ss:Type="String">The desired cloud fileName of the file</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4284860876</Data></Cell>
    <Cell><Data ss:Type="String">True if the file is shareable</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3658429463</Data></Cell>
    <Cell><Data ss:Type="String">Whether to replace file if it exists</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2825336513</Data></Cell>
    <Cell><Data ss:Type="String">The path and fileName of the local file</Data></Cell>
   </Row>
   <Row ss:Height="60">
    <Cell><Data ss:Type="Number">2735674009</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method cancels an upload. If an IFileUploadCallback has been registered with the BrainCloudClient class,&#13;&#10;            the fileUploadFailed callback method will be called once the upload has been canceled.&#13;&#10;            NOTE: The upload will still continue in the background on versions of Unity before 5.3&#13;&#10;            and on Unity mobile platforms.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">197768442</Data></Cell>
    <Cell><Data ss:Type="String">Upload ID of the file to cancel</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3459680370</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Returns the progress of the given upload from 0.0 to 1.0 or -1 if upload not found.&#13;&#10;            NOTE: This will always return 1 on Unity mobile platforms.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3830508708</Data></Cell>
    <Cell><Data ss:Type="String">The id of the upload</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1065305455</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Returns the number of bytes uploaded or -1 if upload not found.&#13;&#10;            NOTE: This will always return the total bytes to transfer on Unity mobile platforms.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2001372668</Data></Cell>
    <Cell><Data ss:Type="String">Returns the total number of bytes that will be uploaded or -1 if upload not found.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2841074010</Data></Cell>
    <Cell><Data ss:Type="String">List all user files</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1816075993</Data></Cell>
    <Cell><Data ss:Type="String">List user files from the given cloud path</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3843576044</Data></Cell>
    <Cell><Data ss:Type="String">File path</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1345057590</Data></Cell>
    <Cell><Data ss:Type="String">Whether to recurse down the path</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2422462896</Data></Cell>
    <Cell><Data ss:Type="String">Deletes a single user file.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1182741655</Data></Cell>
    <Cell><Data ss:Type="String">Delete multiple user files</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">611829393</Data></Cell>
    <Cell><Data ss:Type="String">Returns the CDN URL for a file object.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3269973285</Data></Cell>
    <Cell><Data ss:Type="String">Name of file</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2417364038</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves profile information for the partial matches of the specified text.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1957605088</Data></Cell>
    <Cell><Data ss:Type="String">Universal ID text on which to search.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1153836132</Data></Cell>
    <Cell><Data ss:Type="String">Maximum number of results to return.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3381092287</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves profile information of the specified user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">803724828</Data></Cell>
    <Cell><Data ss:Type="String">External id of the user to find</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4190495844</Data></Cell>
    <Cell><Data ss:Type="String">The authentication type used for the user's ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2412238102</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves profile information for the specified external auth user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3441135433</Data></Cell>
    <Cell><Data ss:Type="String">External id of the friend to find</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1174728091</Data></Cell>
    <Cell><Data ss:Type="String">The external authentication type used for this friend's external id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3881777383</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves the external ID for the specified user profile ID on the specified social platform.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3781991064</Data></Cell>
    <Cell><Data ss:Type="String">Profile (user) ID.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">519658090</Data></Cell>
    <Cell><Data ss:Type="String">Associated authentication type.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3060200652</Data></Cell>
    <Cell><Data ss:Type="String">Returns a particular entity of a particular friend.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3901266981</Data></Cell>
    <Cell><Data ss:Type="String">Id of entity to retrieve.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3581087877</Data></Cell>
    <Cell><Data ss:Type="String">Profile Id of friend who owns entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">351255848</Data></Cell>
    <Cell><Data ss:Type="String">Returns entities of all friends based on type and/or subtype.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">784058313</Data></Cell>
    <Cell><Data ss:Type="String">Types of entities to retrieve.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">309410236</Data></Cell>
    <Cell><Data ss:Type="String">Returns user state of a particular friend.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">271523863</Data></Cell>
    <Cell><Data ss:Type="String">Profile Id of friend to retrieve user state for.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2594372938</Data></Cell>
    <Cell><Data ss:Type="String">Returns user state of a particular user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3174594161</Data></Cell>
    <Cell><Data ss:Type="String">Profile Id of user to retrieve player state for.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">4240682562</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Finds a list of users matching the search text by performing an exact&#13;&#10;            search of all user names.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3747515962</Data></Cell>
    <Cell><Data ss:Type="String">The string to search for.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3351336869</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Finds a list of users matching the search text by performing a substring&#13;&#10;            search of all user names.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2564815670</Data></Cell>
    <Cell><Data ss:Type="String">The substring to search for. Minimum length of 3 characters.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">231043578</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves a list of user and friend platform information for all friends of the current user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3715365796</Data></Cell>
    <Cell><Data ss:Type="String">Friend platform to query.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1889081244</Data></Cell>
    <Cell><Data ss:Type="String">True if including summary data; false otherwise.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3824757980</Data></Cell>
    <Cell><Data ss:Type="String">Links the current user and the specified users as brainCloud friends.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">616290378</Data></Cell>
    <Cell><Data ss:Type="String">Collection of profile IDs.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3952390765</Data></Cell>
    <Cell><Data ss:Type="String">Unlinks the current user and the specified users as brainCloud friends.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1144841717</Data></Cell>
    <Cell><Data ss:Type="String">Get users online status</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2781321060</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves all gamification data for the player.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3758927556</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves all milestones defined for the game.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4230244693</Data></Cell>
    <Cell><Data ss:Type="String">Read all of the achievements defined for the game.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2628138794</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns all defined xp levels and any rewards associated&#13;&#10;            with those xp levels.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2923790557</Data></Cell>
    <Cell><Data ss:Type="String">Method retrives the list of achieved achievements.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3518335143</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves the list of completed milestones.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1891643653</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves the list of in progress milestones</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">852953365</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves milestones of the given category.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2685917613</Data></Cell>
    <Cell><Data ss:Type="String">The milestone category</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">728781040</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method will award the achievements specified. On success, this will&#13;&#10;            call AwardThirdPartyAchievement to hook into the client-side Achievement&#13;&#10;            service (ie GameCentre, Facebook etc).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4246819136</Data></Cell>
    <Cell><Data ss:Type="String">A collection of achievement ids to award</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2290186711</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves all of the quests defined for the game.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3442973386</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all completed quests.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1584277047</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all in progress quests.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">310113882</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all quests that haven't been started.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3243655784</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all quests with status.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">884750439</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all quests with a basic percentage.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2561147077</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all quests with a complex percentage.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2822433178</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all quests for the given category.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3214478028</Data></Cell>
    <Cell><Data ss:Type="String">The quest category</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">759035702</Data></Cell>
    <Cell><Data ss:Type="String">Sets the specified milestones' statuses to LOCKED.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1420239875</Data></Cell>
    <Cell><Data ss:Type="String">List of milestones to reset</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1496412186</Data></Cell>
    <Cell><Data ss:Type="String">Method reads all the global properties of the game</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3897244060</Data></Cell>
    <Cell><Data ss:Type="String">Sets expiry time for entity in milliseconds if &gt; 0</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2278003517</Data></Cell>
    <Cell><Data ss:Type="String">Method creates a new entity on the server with an indexed id.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">83176711</Data></Cell>
    <Cell><Data ss:Type="String">A secondary ID that will be indexed</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1159509942</Data></Cell>
    <Cell><Data ss:Type="String">Method updates an existing entity on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2987060309</Data></Cell>
    <Cell><Data ss:Type="String">The entity ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1544085321</Data></Cell>
    <Cell><Data ss:Type="String">The version of the entity to update</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">818933609</Data></Cell>
    <Cell><Data ss:Type="String">Method updates an existing entity's Acl on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2276148865</Data></Cell>
    <Cell><Data ss:Type="String">The entity's access control list as json.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3659339600</Data></Cell>
    <Cell><Data ss:Type="String">Method updates an existing entity's time to live on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2017425174</Data></Cell>
    <Cell><Data ss:Type="String">Method deletes an existing entity on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1720206926</Data></Cell>
    <Cell><Data ss:Type="String">The version of the entity to delete</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2708311090</Data></Cell>
    <Cell><Data ss:Type="String">Method reads an existing entity from the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4102697171</Data></Cell>
    <Cell><Data ss:Type="String">Method gets list of entities from the server base on indexed id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">938388627</Data></Cell>
    <Cell><Data ss:Type="String">The entity indexed Id</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">364367758</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method uses a paging system to iterate through Global Entities.&#13;&#10;            After retrieving a page of Global Entities with this method,&#13;&#10;            use GetPageOffset() to retrieve previous or next pages.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2215263398</Data></Cell>
    <Cell><Data ss:Type="String">Partial increment of global entity data field items. Partial set of items incremented as specified.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1231629163</Data></Cell>
    <Cell><Data ss:Type="String">Gets a list of up to randomCount randomly selected entities from the server based on the where condition and specified maximum return count.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2698515467</Data></Cell>
    <Cell><Data ss:Type="String">Method updates an existing entity's Owner and Acl on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3899849577</Data></Cell>
    <Cell><Data ss:Type="String">The version of the entity</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4063036024</Data></Cell>
    <Cell><Data ss:Type="String">The owner ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2168466354</Data></Cell>
    <Cell><Data ss:Type="String">The entity's access control list</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">509877758</Data></Cell>
    <Cell><Data ss:Type="String">Method clears the owner id of an existing entity and sets the Acl on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2187865934</Data></Cell>
    <Cell><Data ss:Type="String">Method returns all of the global statistics.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1098478859</Data></Cell>
    <Cell><Data ss:Type="String">Reads a subset of global statistics as defined by the input JSON.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2199276164</Data></Cell>
    <Cell><Data ss:Type="String">A list containing the statistics to read</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4292977758</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves the global statistics for the given category.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3522646358</Data></Cell>
    <Cell><Data ss:Type="String">The global statistics category</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">256540121</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Atomically increment (or decrement) global statistics.&#13;&#10;            Global statistics are defined through the brainCloud portal.</Data></Cell>
   </Row>
   <Row ss:Height="180">
    <Cell><Data ss:Type="Number">4269693170</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The JSON encoded data to be sent to the server as follows:&#13;&#10;            {&#13;&#10;              stat1: 10,&#13;&#10;              stat2: -5.5,&#13;&#10;            }&#13;&#10;            would increment stat1 by 10 and decrement stat2 by 5.5.&#13;&#10;            For the full statistics grammer see the api.braincloudservers.com site.&#13;&#10;            There are many more complex operations supported such as:&#13;&#10;            {&#13;&#10;              stat1:INC_TO_LIMIT#9#30&#13;&#10;            }&#13;&#10;            which increments stat1 by 9 up to a limit of 30.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">425240629</Data></Cell>
    <Cell><Data ss:Type="String">Apply statistics grammar to a partial set of statistics.</Data></Cell>
   </Row>
   <Row ss:Height="120">
    <Cell><Data ss:Type="Number">2885365433</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Example data to be passed to method:&#13;&#10;            {&#13;&#10;                &quot;DEAD_CATS&quot;: &quot;RESET&quot;,&#13;&#10;                &quot;LIVES_LEFT&quot;: &quot;SET#9&quot;,&#13;&#10;                &quot;MICE_KILLED&quot;: &quot;INC#2&quot;,&#13;&#10;                &quot;DOG_SCARE_BONUS_POINTS&quot;: &quot;INC#10&quot;,&#13;&#10;                &quot;TREES_CLIMBED&quot;: 1&#13;&#10;            }</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1545226902</Data></Cell>
    <Cell><Data ss:Type="String">Accept an outstanding invitation to join the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2818507663</Data></Cell>
    <Cell><Data ss:Type="String">ID of the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">313963332</Data></Cell>
    <Cell><Data ss:Type="String">Add a member to the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2401676279</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the member being added.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3776073040</Data></Cell>
    <Cell><Data ss:Type="String">Role of the member being added.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3885363114</Data></Cell>
    <Cell><Data ss:Type="String">Attributes of the member being added.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2513819384</Data></Cell>
    <Cell><Data ss:Type="String">Approve an outstanding request to join the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">272484801</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the invitation being deleted.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3992903833</Data></Cell>
    <Cell><Data ss:Type="String">Role of the member being invited.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1808905325</Data></Cell>
    <Cell><Data ss:Type="String">Attributes of the member being invited.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">727874195</Data></Cell>
    <Cell><Data ss:Type="String">Automatically join an open group that matches the search criteria and has space available.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3372878172</Data></Cell>
    <Cell><Data ss:Type="String">Name of the associated group type.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">726645307</Data></Cell>
    <Cell><Data ss:Type="String">Selection strategy to employ when there are multiple matches</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3892789953</Data></Cell>
    <Cell><Data ss:Type="String">Query parameters (optional)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2383317455</Data></Cell>
    <Cell><Data ss:Type="String">Cancel an outstanding invitation to the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1387837662</Data></Cell>
    <Cell><Data ss:Type="String">Create a group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1274878835</Data></Cell>
    <Cell><Data ss:Type="String">Name of the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">883772248</Data></Cell>
    <Cell><Data ss:Type="String">Name of the type of group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1908227688</Data></Cell>
    <Cell><Data ss:Type="String">true if group is open; false if closed.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3231494895</Data></Cell>
    <Cell><Data ss:Type="String">The group's access control list. A null ACL implies default.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1337871338</Data></Cell>
    <Cell><Data ss:Type="String">Custom application data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2410419303</Data></Cell>
    <Cell><Data ss:Type="String">Attributes for the group owner (current user).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1095925048</Data></Cell>
    <Cell><Data ss:Type="String">Default attributes for group members.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1001815857</Data></Cell>
    <Cell><Data ss:Type="String">Create a group entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">835741335</Data></Cell>
    <Cell><Data ss:Type="String">true if entity is owned by a member; false if owned by the entire group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1405936310</Data></Cell>
    <Cell><Data ss:Type="String">Access control list for the group entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">995146037</Data></Cell>
    <Cell><Data ss:Type="String">Delete a group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2833849333</Data></Cell>
    <Cell><Data ss:Type="String">Current version of the group</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">711667467</Data></Cell>
    <Cell><Data ss:Type="String">Delete a group entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">361448193</Data></Cell>
    <Cell><Data ss:Type="String">ID of the entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">19714425</Data></Cell>
    <Cell><Data ss:Type="String">The current version of the group entity (for concurrency checking).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3503367899</Data></Cell>
    <Cell><Data ss:Type="String">Read information on groups to which the current user belongs.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2429324087</Data></Cell>
    <Cell><Data ss:Type="String">Increment elements for the group's data field.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1892049646</Data></Cell>
    <Cell><Data ss:Type="String">Partial data map with incremental values.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3989735442</Data></Cell>
    <Cell><Data ss:Type="String">Increment elements for the group entity's data field.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2279097439</Data></Cell>
    <Cell><Data ss:Type="String">Invite a member to the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4285379087</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the member being invited.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1015654607</Data></Cell>
    <Cell><Data ss:Type="String">Join an open group or request to join a closed group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1991826114</Data></Cell>
    <Cell><Data ss:Type="String">Leave a group in which the user is a member.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">221732722</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve a page of group summary information based on the specified context.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1516233099</Data></Cell>
    <Cell><Data ss:Type="String">Query context.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">359325622</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Retrieve a page of group summary information based on the encoded context &#13;&#10;            and specified page offset.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3007644061</Data></Cell>
    <Cell><Data ss:Type="String">Encoded reference query context.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2575619547</Data></Cell>
    <Cell><Data ss:Type="String">Number of pages by which to offset the query.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2657542217</Data></Cell>
    <Cell><Data ss:Type="String">Read information on groups to which the specified user belongs.  Access is subject to restrictions.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3521080028</Data></Cell>
    <Cell><Data ss:Type="String">User to read groups for</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2825710419</Data></Cell>
    <Cell><Data ss:Type="String">Read the specified group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">964858301</Data></Cell>
    <Cell><Data ss:Type="String">Read the data of the specified group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1436083063</Data></Cell>
    <Cell><Data ss:Type="String">Read a page of group entity information.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">5493998</Data></Cell>
    <Cell><Data ss:Type="String">Read the specified group entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">329557082</Data></Cell>
    <Cell><Data ss:Type="String">Read the members of the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2338118292</Data></Cell>
    <Cell><Data ss:Type="String">Reject an outstanding invitation to join the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">621393713</Data></Cell>
    <Cell><Data ss:Type="String">Reject an outstanding request to join the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1580687203</Data></Cell>
    <Cell><Data ss:Type="String">Remove a member from the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2501425168</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the member being deleted.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2664098096</Data></Cell>
    <Cell><Data ss:Type="String">Updates a group's data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1456326925</Data></Cell>
    <Cell><Data ss:Type="String">Version to verify.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">978583416</Data></Cell>
    <Cell><Data ss:Type="String">Data to apply.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3718968538</Data></Cell>
    <Cell><Data ss:Type="String">Update a group entity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2224544612</Data></Cell>
    <Cell><Data ss:Type="String">Update a member of the group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4035380798</Data></Cell>
    <Cell><Data ss:Type="String">Profile ID of the member being updated.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3655637961</Data></Cell>
    <Cell><Data ss:Type="String">Role of the member being updated (optional).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2240517822</Data></Cell>
    <Cell><Data ss:Type="String">Attributes of the member being updated (optional).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">560477461</Data></Cell>
    <Cell><Data ss:Type="String">Updates a group's name.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4118956683</Data></Cell>
    <Cell><Data ss:Type="String">Name to apply.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">220448860</Data></Cell>
    <Cell><Data ss:Type="String">Attach the user's Facebook credentials to the current profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">517051335</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from the Facebook SDK&#13;&#10;              (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1201989360</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Merge the profile associated with the provided Facebook credentials with the&#13;&#10;            current profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2927321784</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from the Facebook SDK&#13;&#10;            (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3840261909</Data></Cell>
    <Cell><Data ss:Type="String">Detach the Facebook identity from this profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">97671564</Data></Cell>
    <Cell><Data ss:Type="String">Proceed even if the profile will revert to anonymous?</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2238816762</Data></Cell>
    <Cell><Data ss:Type="String">Attach a Game Center identity to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3920262934</Data></Cell>
    <Cell><Data ss:Type="String">The user's game center id  (use the playerID property from the local GKPlayer object)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">416125091</Data></Cell>
    <Cell><Data ss:Type="String">Merge the profile associated with the specified Game Center identity with the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4022652226</Data></Cell>
    <Cell><Data ss:Type="String">Detach the Game Center identity from the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">656932123</Data></Cell>
    <Cell><Data ss:Type="String">Attach a Email and Password identity to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2643901903</Data></Cell>
    <Cell><Data ss:Type="String">The user's e-mail address</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">98975405</Data></Cell>
    <Cell><Data ss:Type="String">The user's password</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1571086063</Data></Cell>
    <Cell><Data ss:Type="String">Merge the profile associated with the provided e=mail with the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1664259169</Data></Cell>
    <Cell><Data ss:Type="String">Detach the e-mail identity from the current profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">967505870</Data></Cell>
    <Cell><Data ss:Type="String">Attach a Universal (userId + password) identity to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2624737829</Data></Cell>
    <Cell><Data ss:Type="String">The user's userId</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">847608053</Data></Cell>
    <Cell><Data ss:Type="String">Detach the universal identity from the current profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3306288313</Data></Cell>
    <Cell><Data ss:Type="String">Attach a Steam (userId + steamsessionticket) identity to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">940276871</Data></Cell>
    <Cell><Data ss:Type="String">The user's session ticket (hex encoded)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">800247840</Data></Cell>
    <Cell><Data ss:Type="String">Merge the profile associated with the provided steam userId with the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3799057324</Data></Cell>
    <Cell><Data ss:Type="String">Detach the steam identity from the current profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1111133590</Data></Cell>
    <Cell><Data ss:Type="String">Attach the user's Google credentials to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">814483931</Data></Cell>
    <Cell><Data ss:Type="String">The google id of the user</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1351687847</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from the Google SDK&#13;&#10;              (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3933256287</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Merge the profile associated with the provided Google credentials with the&#13;&#10;            current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1936782843</Data></Cell>
    <Cell><Data ss:Type="String">The Google id of the user</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1693022146</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from the Google SDK&#13;&#10;            (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3814612339</Data></Cell>
    <Cell><Data ss:Type="String">Detach the Google identity from this profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">746653703</Data></Cell>
    <Cell><Data ss:Type="String">Attach the user's Twitter credentials to the current profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1540798596</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Merge the profile associated with the provided Twitter credentials with the&#13;&#10;            current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">283087959</Data></Cell>
    <Cell><Data ss:Type="String">Detach the Twitter identity from this profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">677586524</Data></Cell>
    <Cell><Data ss:Type="String">The Twitter id of the user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">866117446</Data></Cell>
    <Cell><Data ss:Type="String">Attach the user's Parse credentials to the current profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1502720649</Data></Cell>
    <Cell><Data ss:Type="String">The Parse id of the user</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">574503121</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from Parse&#13;&#10;              (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1059688585</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Merge the profile associated with the provided Parse credentials with the&#13;&#10;            current profile.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3555092031</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The validated token from Parse&#13;&#10;            (that will be further validated when sent to the bC service)</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3342715126</Data></Cell>
    <Cell><Data ss:Type="String">Detach the Parse identity from this profile.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3379734688</Data></Cell>
    <Cell><Data ss:Type="String">Switch to a Child Profile</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1384491817</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The profileId of the child profile to switch to&#13;&#10;            If null and forceCreate is true a new profile will be created</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3729671002</Data></Cell>
    <Cell><Data ss:Type="String">The appId of the child game to switch to</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1097902905</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Switches to the child profile of an app when only one profile exists&#13;&#10;            If multiple profiles exist this returns an error</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">259985265</Data></Cell>
    <Cell><Data ss:Type="String">The App ID of the child game to switch to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2834255044</Data></Cell>
    <Cell><Data ss:Type="String">Should a new profile be created if one does not exist?</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">274563112</Data></Cell>
    <Cell><Data ss:Type="String">Attach a new identity to a parent app</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">465490740</Data></Cell>
    <Cell><Data ss:Type="String">User ID</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1216845799</Data></Cell>
    <Cell><Data ss:Type="String">Password or client side token</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1751713292</Data></Cell>
    <Cell><Data ss:Type="String">Type of authentication</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">878589572</Data></Cell>
    <Cell><Data ss:Type="String">Optional - if using AuthenticationType of external</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">959172607</Data></Cell>
    <Cell><Data ss:Type="String">If the profile does not exist, should it be created?</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2497076437</Data></Cell>
    <Cell><Data ss:Type="String">Switch to a Parent Profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2947779124</Data></Cell>
    <Cell><Data ss:Type="String">The level of the parent to switch to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1795528964</Data></Cell>
    <Cell><Data ss:Type="String">Detaches parent from this user's profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">262161245</Data></Cell>
    <Cell><Data ss:Type="String">Returns a list of all child profiles in child Apps</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2580273172</Data></Cell>
    <Cell><Data ss:Type="String">Whether to return the summary friend data along with this call</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">764184395</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve list of identities</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4078990158</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve list of expired identities</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1572114302</Data></Cell>
    <Cell><Data ss:Type="String">Refreshes an identity for this user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3526432958</Data></Cell>
    <Cell><Data ss:Type="String">Attaches a peer identity to this user's profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">306795982</Data></Cell>
    <Cell><Data ss:Type="String">Name of the peer to connect to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3192997222</Data></Cell>
    <Cell><Data ss:Type="String">Detaches a peer identity from this user's profile</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3194998882</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves a list of attached peer profiles</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4117525778</Data></Cell>
    <Cell><Data ss:Type="String">Sends a simple text email to the specified user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1574951430</Data></Cell>
    <Cell><Data ss:Type="String">The email subject</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3875652552</Data></Cell>
    <Cell><Data ss:Type="String">The email body</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">287544906</Data></Cell>
    <Cell><Data ss:Type="String">Sends an advanced email to the specified user</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">4137316286</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Parameters to send to the email service. See the documentation for&#13;&#10;            a full list. http://getbraincloud.com/apidocs/apiref/#capi-mail</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3451046120</Data></Cell>
    <Cell><Data ss:Type="String">Sends an advanced email to the specified email address</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4160969805</Data></Cell>
    <Cell><Data ss:Type="String">The address to send the email to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">280944705</Data></Cell>
    <Cell><Data ss:Type="String">Read match making record</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2642353239</Data></Cell>
    <Cell><Data ss:Type="String">Sets player rating</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1196803524</Data></Cell>
    <Cell><Data ss:Type="String">The new player rating.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2900953615</Data></Cell>
    <Cell><Data ss:Type="String">Resets player rating</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">867715060</Data></Cell>
    <Cell><Data ss:Type="String">Increments player rating</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">153929736</Data></Cell>
    <Cell><Data ss:Type="String">The increment amount</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3509091995</Data></Cell>
    <Cell><Data ss:Type="String">Decrements player rating</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1966477451</Data></Cell>
    <Cell><Data ss:Type="String">The decrement amount</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">176581745</Data></Cell>
    <Cell><Data ss:Type="String">Turns shield on</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3030378970</Data></Cell>
    <Cell><Data ss:Type="String">Turns shield on for the specified number of minutes</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">951424754</Data></Cell>
    <Cell><Data ss:Type="String">Number of minutes to turn the shield on for</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">507515209</Data></Cell>
    <Cell><Data ss:Type="String">Turns shield off</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4225829713</Data></Cell>
    <Cell><Data ss:Type="String">Increases the shield on time by specified number of minutes</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4188786675</Data></Cell>
    <Cell><Data ss:Type="String">Number of minutes to increase the shield time for</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">956249050</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Gets the shield expiry for the given player id. Passing in a null player id&#13;&#10;            will return the shield expiry for the current player. The value returned is&#13;&#10;            the time in UTC millis when the shield will expire.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">145445169</Data></Cell>
    <Cell><Data ss:Type="String">The player id or use null to retrieve for the current player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">481527989</Data></Cell>
    <Cell><Data ss:Type="String">Finds matchmaking enabled players</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4101547559</Data></Cell>
    <Cell><Data ss:Type="String">The range delta</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1165356223</Data></Cell>
    <Cell><Data ss:Type="String">The maximum number of matches to return</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">312002995</Data></Cell>
    <Cell><Data ss:Type="String">Finds matchmaking enabled players with additional attributes</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2999564265</Data></Cell>
    <Cell><Data ss:Type="String">Attributes match criteria</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3738069792</Data></Cell>
    <Cell><Data ss:Type="String">Finds matchmaking enabled players using a cloud code filter</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3029301807</Data></Cell>
    <Cell><Data ss:Type="String">Parameters to pass to the CloudCode filter script</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">4255925431</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Finds matchmaking enabled players using a cloud code filter &#13;&#10;            and additional attributes</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1085190330</Data></Cell>
    <Cell><Data ss:Type="String">Enables Match Making for the Player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3469513659</Data></Cell>
    <Cell><Data ss:Type="String">Disables Match Making for the Player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3882491408</Data></Cell>
    <Cell><Data ss:Type="String">Starts a match</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4036425041</Data></Cell>
    <Cell><Data ss:Type="String">The player to start a match with</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4045421215</Data></Cell>
    <Cell><Data ss:Type="String">The range delta used for the initial match search</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3375939873</Data></Cell>
    <Cell><Data ss:Type="String">Cancels a match</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2647446750</Data></Cell>
    <Cell><Data ss:Type="String">The playback stream id returned in the start match</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">860665697</Data></Cell>
    <Cell><Data ss:Type="String">Completes a match</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3655140050</Data></Cell>
    <Cell><Data ss:Type="String">The playback stream id returned in the initial start match</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3309270441</Data></Cell>
    <Cell><Data ss:Type="String">Starts a stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1235993071</Data></Cell>
    <Cell><Data ss:Type="String">The player to start a stream with</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">293353462</Data></Cell>
    <Cell><Data ss:Type="String">Whether to include shared data in the stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1281829109</Data></Cell>
    <Cell><Data ss:Type="String">Reads a stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1225656484</Data></Cell>
    <Cell><Data ss:Type="String">Identifies the stream to read</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4081377019</Data></Cell>
    <Cell><Data ss:Type="String">Ends a stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1462835951</Data></Cell>
    <Cell><Data ss:Type="String">Deletes a stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">351934086</Data></Cell>
    <Cell><Data ss:Type="String">Adds a stream event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1628559523</Data></Cell>
    <Cell><Data ss:Type="String">Describes the event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1654500746</Data></Cell>
    <Cell><Data ss:Type="String">Current summary data as of this event</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1011578183</Data></Cell>
    <Cell><Data ss:Type="String">Gets recent streams for initiating player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1416118931</Data></Cell>
    <Cell><Data ss:Type="String">The player that started the stream</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">516011350</Data></Cell>
    <Cell><Data ss:Type="String">Gets recent streams for target player</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">1882898370</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Read the state of the currently logged in user.&#13;&#10;            This method returns a JSON object describing most of the&#13;&#10;            player's data: entities, statistics, level, currency.&#13;&#10;            Apps will typically call this method after authenticating to get an&#13;&#10;            up-to-date view of the user's data.</Data></Cell>
   </Row>
   <Row ss:Height="60">
    <Cell><Data ss:Type="Number">653509101</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Completely deletes the user record and all data fully owned&#13;&#10;            by the user. After calling this method, the user will need&#13;&#10;            to re-authenticate and create a new profile.&#13;&#10;            This is mostly used for debugging/qa.</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">4248227046</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">This method will delete *most* data for the currently logged in user.&#13;&#10;            Data which is not deleted includes: currency, credentials, and&#13;&#10;            purchase transactions. ResetUser is different from DeleteUser in that&#13;&#10;            the player record will continue to exist after the reset (so the user&#13;&#10;            does not need to re-authenticate).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">913883113</Data></Cell>
    <Cell><Data ss:Type="String">Logs user out of server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">227089435</Data></Cell>
    <Cell><Data ss:Type="String">Sets the user name.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1397238358</Data></Cell>
    <Cell><Data ss:Type="String">The name of the user</Data></Cell>
   </Row>
   <Row ss:Height="90">
    <Cell><Data ss:Type="Number">4284204098</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Updates the &quot;friend summary data&quot; associated with the logged in user.&#13;&#10;             Some operations will return this summary data. For instance the social&#13;&#10;             leaderboards will return the player's score in the leaderboard along&#13;&#10;             with the friend summary data. Generally this data is used to provide&#13;&#10;             a quick overview of the player without requiring a separate API call&#13;&#10;             to read their public stats or entity data.</Data></Cell>
   </Row>
   <Row ss:Height="105">
    <Cell><Data ss:Type="Number">3568944045</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">A JSON string defining the summary data.&#13;&#10;             For example:&#13;&#10;             {&#13;&#10;               &quot;xp&quot;:123,&#13;&#10;               &quot;level&quot;:12,&#13;&#10;               &quot;highScore&quot;:45123&#13;&#10;             }</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2444863796</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve the user's attributes.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">584334708</Data></Cell>
    <Cell><Data ss:Type="String">Update user's attributes.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1735117156</Data></Cell>
    <Cell><Data ss:Type="String">Single layer json string that is a set of key-value pairs</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1331190198</Data></Cell>
    <Cell><Data ss:Type="String">Whether to wipe existing attributes prior to update.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">557921644</Data></Cell>
    <Cell><Data ss:Type="String">Remove user's attributes.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3339043506</Data></Cell>
    <Cell><Data ss:Type="String">List of attribute names.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">591812609</Data></Cell>
    <Cell><Data ss:Type="String">Updates player's picture URL.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2642768314</Data></Cell>
    <Cell><Data ss:Type="String">URL to apply.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">153363109</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Update the user's contact email. &#13;&#10;            Note this is unrelated to email authentication.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3566353866</Data></Cell>
    <Cell><Data ss:Type="String">Updated email</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3837811546</Data></Cell>
    <Cell><Data ss:Type="String">Read all available user statistics.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2520061912</Data></Cell>
    <Cell><Data ss:Type="String">Reads a subset of user statistics as defined by the input JSON.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1441697671</Data></Cell>
    <Cell><Data ss:Type="String">Method retrieves the user statistics for the given category.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2644281071</Data></Cell>
    <Cell><Data ss:Type="String">The user statistics category</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">407162168</Data></Cell>
    <Cell><Data ss:Type="String">Reset all of the statistics for this user back to their initial value.</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">117778484</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Atomically increment (or decrement) user statistics.&#13;&#10;            Any rewards that are triggered from user statistic increments&#13;&#10;            will be considered. User statistics are defined through the brainCloud portal.&#13;&#10;            Note also that the &quot;xpCapped&quot; property is returned (true/false depending on whether&#13;&#10;            the xp cap is turned on and whether the user has hit it).</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">3121761115</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Atomically increment (or decrement) user statistics.&#13;&#10;             Any rewards that are triggered from user statistic increments&#13;&#10;             will be considered. User statistics are defined through the brainCloud portal.&#13;&#10;             Note also that the &quot;xpCapped&quot; property is returned (true/false depending on whether&#13;&#10;             the xp cap is turned on and whether the user has hit it).</Data></Cell>
   </Row>
   <Row ss:Height="195">
    <Cell><Data ss:Type="Number">846462326</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Stats name and their increments:&#13;&#10;             {&#13;&#10;              {&quot;stat1&quot;, 10},&#13;&#10;              {&quot;stat1&quot;, -5}&#13;&#10;             }&#13;&#10;            &#13;&#10;             would increment stat1 by 10 and decrement stat2 by 5.&#13;&#10;             For the full statistics grammer see the api.braincloudservers.com site.&#13;&#10;             There are many more complex operations supported such as:&#13;&#10;             {&#13;&#10;               stat1:INC_TO_LIMIT#9#30&#13;&#10;             }&#13;&#10;             which increments stat1 by 9 up to a limit of 30.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1884454185</Data></Cell>
    <Cell><Data ss:Type="String">Returns JSON representing the next experience level for the user.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">42038174</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Increments the user's experience. If the user goes up a level,&#13;&#10;            the new level details will be returned along with a list of rewards.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3073625537</Data></Cell>
    <Cell><Data ss:Type="String">The amount to increase the user's experience by</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">1871284307</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sets the user's experience to an absolute value. Note that this&#13;&#10;            is simply a set and will not reward the user if their level changes&#13;&#10;            as a result.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3626300325</Data></Cell>
    <Cell><Data ss:Type="String">The amount to set the the player's experience to</Data></Cell>
   </Row>
   <Row ss:Height="120">
    <Cell><Data ss:Type="Number">3264643322</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Trigger an event server side that will increase the user statistics.&#13;&#10;             This may cause one or more awards to be sent back to the user -&#13;&#10;             could be achievements, experience, etc. Achievements will be sent by this&#13;&#10;             client library to the appropriate awards service (Apple Game Center, etc).&#13;&#10;            &#13;&#10;             This mechanism supercedes the PlayerStatisticsService API methods, since&#13;&#10;             PlayerStatisticsService API method only update the raw statistics without&#13;&#10;             triggering the rewards.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2074816689</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">See documentation for TriggerStatsEvent for more&#13;&#10;            documentation.</Data></Cell>
   </Row>
   <Row ss:Height="165">
    <Cell><Data ss:Type="Number">2639329887</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">jsonData&#13;&#10;              [&#13;&#10;                {&#13;&#10;                  &quot;eventName&quot;: &quot;event1&quot;,&#13;&#10;                  &quot;eventMultiplier&quot;: 1&#13;&#10;                },&#13;&#10;                {&#13;&#10;                  &quot;eventName&quot;: &quot;event2&quot;,&#13;&#10;                  &quot;eventMultiplier&quot;: 1&#13;&#10;                }&#13;&#10;              ]</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2968369533</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Gets the player's currency for the given currency type&#13;&#10;            or all currency types if null passed in.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3098614941</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The currency type to retrieve or null&#13;&#10;            if all currency types are being requested.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">821663356</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method gets the active sales inventory for the passed-in&#13;&#10;            currency type.</Data></Cell>
   </Row>
   <Row ss:Height="120">
    <Cell><Data ss:Type="Number">1308824005</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The store platform. Valid stores are:&#13;&#10;            - itunes&#13;&#10;            - facebook&#13;&#10;            - appworld&#13;&#10;            - steam&#13;&#10;            - windows&#13;&#10;            - windowsPhone&#13;&#10;            - googlePlay</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1310841996</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The currency to retrieve the sales&#13;&#10;            inventory for. This is only used for Steam and Facebook stores.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1931459178</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method gets the active sales inventory for the passed-in&#13;&#10;            currency type and category.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3286503558</Data></Cell>
    <Cell><Data ss:Type="String">The product category</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1197888124</Data></Cell>
    <Cell><Data ss:Type="String">Initialize Steam Transaction</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1854600487</Data></Cell>
    <Cell><Data ss:Type="String">ISO 639-1 language code</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">713701413</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Finalize Steam Transaction. On success, the player will be awarded the &#13;&#10;            associated currencies.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3070090820</Data></Cell>
    <Cell><Data ss:Type="String">Steam transaction id</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3786564838</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Verify Microsoft Receipt. On success, the player will be awarded the &#13;&#10;            associated currencies.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1376618698</Data></Cell>
    <Cell><Data ss:Type="String">Receipt XML</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">874663351</Data></Cell>
    <Cell><Data ss:Type="String">Returns the eligible promotions for the player.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2185437611</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Verify ITunes Receipt. On success, the player will be awarded the &#13;&#10;            associated currencies.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">632327589</Data></Cell>
    <Cell><Data ss:Type="String">Base64 encoded receipt data</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1764790324</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Confirm Facebook Purchase. On success, the player will be awarded the &#13;&#10;            associated currencies.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2137993665</Data></Cell>
    <Cell><Data ss:Type="String">signed_request object received from Facebook</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">535362411</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Confirm GooglePlay Purchase. On success, the player will be awarded the &#13;&#10;            associated currencies.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1771446577</Data></Cell>
    <Cell><Data ss:Type="String">GooglePlay order id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4014714431</Data></Cell>
    <Cell><Data ss:Type="String">GooglePlay product id</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">518942409</Data></Cell>
    <Cell><Data ss:Type="String">GooglePlay token string</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2364961933</Data></Cell>
    <Cell><Data ss:Type="String">Checks supplied text for profanity.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2800396770</Data></Cell>
    <Cell><Data ss:Type="String">The text to check</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2666527571</Data></Cell>
    <Cell><Data ss:Type="String">Optional comma delimited list of two character language codes</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2059488805</Data></Cell>
    <Cell><Data ss:Type="String">Optional processing of email addresses</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1800046253</Data></Cell>
    <Cell><Data ss:Type="String">Optional processing of phone numbers</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2325577370</Data></Cell>
    <Cell><Data ss:Type="String">Optional processing of urls</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2461104055</Data></Cell>
    <Cell><Data ss:Type="String">Replaces the characters of profanity text with a passed character(s).</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3532875160</Data></Cell>
    <Cell><Data ss:Type="String">The text to replace individual characters of profanity text with</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1454118763</Data></Cell>
    <Cell><Data ss:Type="String">Checks supplied text for profanity and returns a list of bad wors.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2878242317</Data></Cell>
    <Cell><Data ss:Type="String">Deregisters all device tokens currently registered to the user.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1422556598</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Deregisters the given device token from the server to disable this device&#13;&#10;            from receiving push notifications.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3594649986</Data></Cell>
    <Cell><Data ss:Type="String">The device platform being registered.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2882017632</Data></Cell>
    <Cell><Data ss:Type="String">The platform-dependant device token needed for push notifications.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2366819100</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Registers the given device token with the server to enable this device&#13;&#10;            to receive push notifications.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3085022295</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends a simple push notification based on the passed in message.&#13;&#10;            NOTE: It is possible to send a push notification to oneself.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">214447226</Data></Cell>
    <Cell><Data ss:Type="String">The braincloud profileId of the user to receive the notification</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4082348732</Data></Cell>
    <Cell><Data ss:Type="String">Text of the push notification</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1684611515</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends a notification to a user based on a brainCloud portal configured notification template.&#13;&#10;            NOTE: It is possible to send a push notification to oneself.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2810214273</Data></Cell>
    <Cell><Data ss:Type="String">Id of the notification template</Data></Cell>
   </Row>
   <Row ss:Height="60">
    <Cell><Data ss:Type="Number">3081846718</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends a notification to a user based on a brainCloud portal configured notification template.&#13;&#10;            Includes JSON defining the substitution params to use with the template.&#13;&#10;            See the Portal documentation for more info.&#13;&#10;            NOTE: It is possible to send a push notification to oneself.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">590270219</Data></Cell>
    <Cell><Data ss:Type="String">JSON defining the substitution params to use with the template</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">729815877</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends a notification to a &quot;group&quot; of user based on a brainCloud portal configured notification template.&#13;&#10;            Includes JSON defining the substitution params to use with the template.&#13;&#10;            See the Portal documentation for more info.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3767097004</Data></Cell>
    <Cell><Data ss:Type="String">Target group</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">522935948</Data></Cell>
    <Cell><Data ss:Type="String">Body and title of alert</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3898497473</Data></Cell>
    <Cell><Data ss:Type="String">Optional custom data</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2641774296</Data></Cell>
    <Cell><Data ss:Type="String">Schedules raw notifications based on user local time.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1693646339</Data></Cell>
    <Cell><Data ss:Type="String">The profileId of the user to receive the notification</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1061300016</Data></Cell>
    <Cell><Data ss:Type="String">Valid Fcm data content</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">377888442</Data></Cell>
    <Cell><Data ss:Type="String">Valid ios data content</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">403699573</Data></Cell>
    <Cell><Data ss:Type="String">Facebook template string</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3342140411</Data></Cell>
    <Cell><Data ss:Type="String">Start time of sending the push notification</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2582150</Data></Cell>
    <Cell><Data ss:Type="String">Minutes from now to send the push notification</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">929897275</Data></Cell>
    <Cell><Data ss:Type="String">Sends a raw push notification to a target user.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">116842615</Data></Cell>
    <Cell><Data ss:Type="String">Sends a raw push notification to a target list of users.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2218511747</Data></Cell>
    <Cell><Data ss:Type="String">Collection of profile IDs to send the notification to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1400392449</Data></Cell>
    <Cell><Data ss:Type="String">Sends a raw push notification to a target group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1971899095</Data></Cell>
    <Cell><Data ss:Type="String">Schedules a normalized push notification to a user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3463610823</Data></Cell>
    <Cell><Data ss:Type="String">Schedules a rich push notification to a user</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2194195473</Data></Cell>
    <Cell><Data ss:Type="String">Sends a notification to a user consisting of alert content and custom data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2755091923</Data></Cell>
    <Cell><Data ss:Type="String">Sends a notification to multiple users consisting of alert content and custom data.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2792306164</Data></Cell>
    <Cell><Data ss:Type="String">Redeem a code.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2346848413</Data></Cell>
    <Cell><Data ss:Type="String">The code to redeem</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1098020916</Data></Cell>
    <Cell><Data ss:Type="String">The type of code</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2222387289</Data></Cell>
    <Cell><Data ss:Type="String">Optional - A JSON string containing custom redemption data</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">891786615</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve the codes already redeemed by player.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">976597810</Data></Cell>
    <Cell><Data ss:Type="String">Optional - The type of codes to retrieve. Returns all codes if left unspecified.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3165674628</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Sends an array of file details and returns &#13;&#10;            the details of any of those files that have changed</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1425930582</Data></Cell>
    <Cell><Data ss:Type="String">Category of files on server to compare against</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2114447579</Data></Cell>
    <Cell><Data ss:Type="String">An array of file details</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3200020138</Data></Cell>
    <Cell><Data ss:Type="String">Retrieves the details of custom files stored on the server</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4059960182</Data></Cell>
    <Cell><Data ss:Type="String">Category of files to retrieve</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2424390624</Data></Cell>
    <Cell><Data ss:Type="String">Returns the CDN URL for a file</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">208554691</Data></Cell>
    <Cell><Data ss:Type="String">ID of file</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">892030832</Data></Cell>
    <Cell><Data ss:Type="String">Executes a script on the server.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4293627684</Data></Cell>
    <Cell><Data ss:Type="String">The name of the script to be run</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2607808438</Data></Cell>
    <Cell><Data ss:Type="String">Data to be sent to the script in json format</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2109388727</Data></Cell>
    <Cell><Data ss:Type="String">Allows cloud script executions to be scheduled</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">219005</Data></Cell>
    <Cell><Data ss:Type="String">Name of script</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1988308640</Data></Cell>
    <Cell><Data ss:Type="String">JSON bundle to pass to script</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2788371223</Data></Cell>
    <Cell><Data ss:Type="String">The start date as a DateTime object</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3072436910</Data></Cell>
    <Cell><Data ss:Type="String">Number of minutes from now to run script</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4158480618</Data></Cell>
    <Cell><Data ss:Type="String">Run a cloud script in a parent app</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3214736857</Data></Cell>
    <Cell><Data ss:Type="String">The level name of the parent to run the script from</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1748888730</Data></Cell>
    <Cell><Data ss:Type="String">Cancels a scheduled cloud code script</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">848081305</Data></Cell>
    <Cell><Data ss:Type="String">ID of script job to cancel</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3882977417</Data></Cell>
    <Cell><Data ss:Type="String">Runs a script from the context of a peer</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">793400374</Data></Cell>
    <Cell><Data ss:Type="String">The name of the script to run</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3592372029</Data></Cell>
    <Cell><Data ss:Type="String">JSON data to pass into the script</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3504958728</Data></Cell>
    <Cell><Data ss:Type="String">Identifies the peer</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">163353666</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Runs a script asynchronously from the context of a peer&#13;&#10;            This operation does not wait for the script to complete before returning</Data></Cell>
   </Row>
   <Row ss:Height="195">
    <Cell><Data ss:Type="Number">2672941656</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns the social leaderboard. A player's social leaderboard is&#13;&#10;             comprised of players who are recognized as being your friend.&#13;&#10;             For now, this applies solely to Facebook connected players who are&#13;&#10;             friends with the logged in player (who also must be Facebook connected).&#13;&#10;             In the future this will expand to other identification means (such as&#13;&#10;             Game Centre, Google circles etc).&#13;&#10;            &#13;&#10;             Leaderboards entries contain the player's score and optionally, some user-defined&#13;&#10;             data associated with the score. The currently logged in player will also&#13;&#10;             be returned in the social leaderboard.&#13;&#10;            &#13;&#10;             Note: If no friends have played the game, the bestScore, createdAt, updatedAt&#13;&#10;             will contain NULL.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1937971125</Data></Cell>
    <Cell><Data ss:Type="String">The id of the leaderboard to retrieve</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2525215201</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">If true, the currently logged in player's name will be replaced&#13;&#10;             by the string &quot;You&quot;.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2763420645</Data></Cell>
    <Cell><Data ss:Type="String">Reads multiple social leaderboards.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1438927924</Data></Cell>
    <Cell><Data ss:Type="String">Array of leaderboard id strings</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">654317362</Data></Cell>
    <Cell><Data ss:Type="String">Maximum count of entries to return for each leaderboard.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">3183030323</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">If true, the currently logged in player's name will be replaced&#13;&#10;            by the string &quot;You&quot;.</Data></Cell>
   </Row>
   <Row ss:Height="90">
    <Cell><Data ss:Type="Number">4209315155</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns a page of global leaderboard results.&#13;&#10;            &#13;&#10;             Leaderboards entries contain the player's score and optionally, some user-defined&#13;&#10;             data associated with the score.&#13;&#10;            &#13;&#10;             Note: This method allows the client to retrieve pages from within the global leaderboard list</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1936005045</Data></Cell>
    <Cell><Data ss:Type="String">The id of the leaderboard to retrieve.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4256259554</Data></Cell>
    <Cell><Data ss:Type="String">Sort key Sort order of page.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2501862768</Data></Cell>
    <Cell><Data ss:Type="String">The index at which to start the page.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2686759880</Data></Cell>
    <Cell><Data ss:Type="String">The index at which to end the page.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">2324963146</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns a page of global leaderboard results. By using a non-current version id, &#13;&#10;            the user can retrieve a historical leaderboard. See GetGlobalLeaderboardVersions method&#13;&#10;            to retrieve the version id.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2753121147</Data></Cell>
    <Cell><Data ss:Type="String">The historical version to retrieve.</Data></Cell>
   </Row>
   <Row ss:Height="60">
    <Cell><Data ss:Type="Number">1222879484</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns a view of global leaderboard results that centers on the current player.&#13;&#10;            &#13;&#10;             Leaderboards entries contain the player's score and optionally, some user-defined&#13;&#10;             data associated with the score.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2935380727</Data></Cell>
    <Cell><Data ss:Type="String">The count of number of players before the current player to include.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1747157881</Data></Cell>
    <Cell><Data ss:Type="String">The count of number of players after the current player to include.</Data></Cell>
   </Row>
   <Row ss:Height="45">
    <Cell><Data ss:Type="Number">74019802</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns a view of global leaderboard results that centers on the current player.&#13;&#10;            By using a non-current version id, the user can retrieve a historical leaderboard.&#13;&#10;            See GetGlobalLeaderboardVersions method to retrieve the version id.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3208255288</Data></Cell>
    <Cell><Data ss:Type="String">The historial version to retrieve. Use -1 for current leaderboard.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">391370094</Data></Cell>
    <Cell><Data ss:Type="String">Gets the global leaderboard versions.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">684852594</Data></Cell>
    <Cell><Data ss:Type="String">In_leaderboard identifier.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2092677542</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve the social leaderboard for a group.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2150137354</Data></Cell>
    <Cell><Data ss:Type="String">The leaderboard to read</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3116275517</Data></Cell>
    <Cell><Data ss:Type="String">The group ID</Data></Cell>
   </Row>
   <Row ss:Height="120">
    <Cell><Data ss:Type="Number">3263909330</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Post the players score to the given social leaderboard.&#13;&#10;             You can optionally send a user-defined json string of data&#13;&#10;             with the posted score. This string could include information&#13;&#10;             relevant to the posted score.&#13;&#10;            &#13;&#10;             Note that the behaviour of posting a score can be modified in&#13;&#10;             the brainCloud portal. By default, the server will only keep&#13;&#10;             the player's best score.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2544568379</Data></Cell>
    <Cell><Data ss:Type="String">The leaderboard to post to</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">399792060</Data></Cell>
    <Cell><Data ss:Type="String">The score to post</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2986718885</Data></Cell>
    <Cell><Data ss:Type="String">Removes a player's score from the leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1685572079</Data></Cell>
    <Cell><Data ss:Type="String">The ID of the leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1653009625</Data></Cell>
    <Cell><Data ss:Type="String">The version of the leaderboard</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">2645709072</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Post the players score to the given social leaderboard.&#13;&#10;            Pass leaderboard config data to dynamically create if necessary.&#13;&#10;            You can optionally send a user-defined json string of data&#13;&#10;            with the posted score. This string could include information&#13;&#10;            relevant to the posted score.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1367777569</Data></Cell>
    <Cell><Data ss:Type="String">leaderboard type</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">11495071</Data></Cell>
    <Cell><Data ss:Type="String">Type of rotation</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">691162349</Data></Cell>
    <Cell><Data ss:Type="String">Date to reset the leaderboard UTC</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2680332622</Data></Cell>
    <Cell><Data ss:Type="String">How many rotations to keep</Data></Cell>
   </Row>
   <Row ss:Height="75">
    <Cell><Data ss:Type="Number">4151304751</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Post the players score to the given social leaderboard with a rotation type of DAYS.&#13;&#10;            Pass leaderboard config data to dynamically create if necessary.&#13;&#10;            You can optionally send a user-defined json string of data&#13;&#10;            with the posted score. This string could include information&#13;&#10;            relevant to the posted score.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">937380583</Data></Cell>
    <Cell><Data ss:Type="String">How many days between each rotation</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1806813619</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve the social leaderboard for a list of players.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1526945284</Data></Cell>
    <Cell><Data ss:Type="String">The IDs of the players</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">959902545</Data></Cell>
    <Cell><Data ss:Type="String">Retrieve a list of all leaderboards</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1369862602</Data></Cell>
    <Cell><Data ss:Type="String">Gets the number of entries in a global leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1266520494</Data></Cell>
    <Cell><Data ss:Type="String">Gets a player's score from a leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4009552077</Data></Cell>
    <Cell><Data ss:Type="String">The version of the leaderboard. Use -1 for current.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2245553142</Data></Cell>
    <Cell><Data ss:Type="String">Gets a player's score from multiple leaderboards</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1380248891</Data></Cell>
    <Cell><Data ss:Type="String">A collection of leaderboardIds to retrieve scores from</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2119763811</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Method returns the server time in UTC. This is in UNIX millis time format.&#13;&#10;            For instance 1396378241893 represents 2014-04-01 2:50:41.893 in GMT-4.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4138180671</Data></Cell>
    <Cell><Data ss:Type="String">Processes any outstanding rewards for the given player</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2461231576</Data></Cell>
    <Cell><Data ss:Type="String">The leaderboard for the tournament</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1677165221</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Version of the tournament to claim rewards for.&#13;&#10;            Use -1 for the latest version.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1053533171</Data></Cell>
    <Cell><Data ss:Type="String">Get tournament status associated with a leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1063774253</Data></Cell>
    <Cell><Data ss:Type="String">Version of the tournament. Use -1 for the latest version.</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">528912893</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Join the specified tournament.&#13;&#10;            Any entry fees will be automatically collected.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2967446814</Data></Cell>
    <Cell><Data ss:Type="String">Tournament to join</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">1245691183</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">The initial score for players first joining a tournament&#13;&#10;            Usually 0, unless leaderboard is LOW_VALUE</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1861472609</Data></Cell>
    <Cell><Data ss:Type="String">Removes player's score from tournament leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">433446256</Data></Cell>
    <Cell><Data ss:Type="String">Post the users score to the leaderboard</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2740285191</Data></Cell>
    <Cell><Data ss:Type="String">Optional data attached to the leaderboard entry</Data></Cell>
   </Row>
   <Row ss:Height="30">
    <Cell><Data ss:Type="Number">2977625862</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">Time the user started the match resulting in the score&#13;&#10;            being posted.</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1716336575</Data></Cell>
    <Cell><Data ss:Type="String">Post the users score to the leaderboard and returns the results</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2646622900</Data></Cell>
    <Cell><Data ss:Type="String">Returns the user's expected reward based on the current scores</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3010666386</Data></Cell>
    <Cell><Data ss:Type="String">Returns the user's reward from a finished tournament</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloud.DownloadFile.desc</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloudFile.cloudPath</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloudFile.cloudFilename</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloudFile.replaceIfExists</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloud.GetDownloadInfo.desc</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloudFile.cloudFileName</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="String">BrainCloud.CancelDownload.desc</Data></Cell>
   </Row>
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>
   </PageSetup>
   <Selected/>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
</Workbook>
